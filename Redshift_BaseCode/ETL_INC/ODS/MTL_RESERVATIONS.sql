/*
# Copyright(c) 2022 KPI Partners, Inc. All Rights Reserved.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# author: KPI Partners, Inc.
# version: 2022.06
# description: This script represents Incremental load approach for ODS.
# File Version: KPI v1.0
*/
begin;

-- Delete Records

delete from bec_ods.mtl_reservations
where (nvl(RESERVATION_ID,0)) in (
select nvl(stg.RESERVATION_ID,0) as RESERVATION_ID from bec_ods.mtl_reservations ods, bec_ods_stg.mtl_reservations stg
where nvl(ods.RESERVATION_ID,0) = nvl(stg.RESERVATION_ID,0) and stg.kca_operation IN ('INSERT','UPDATE')
);

commit;

-- Insert records

insert into	bec_ods.mtl_reservations
       (	
		RESERVATION_ID,
		REQUIREMENT_DATE,
		ORGANIZATION_ID,
		INVENTORY_ITEM_ID,
		DEMAND_SOURCE_TYPE_ID,
		DEMAND_SOURCE_NAME,
		DEMAND_SOURCE_HEADER_ID,
		DEMAND_SOURCE_LINE_ID,
		DEMAND_SOURCE_DELIVERY,
		PRIMARY_UOM_CODE,
		PRIMARY_UOM_ID,
		RESERVATION_UOM_CODE,
		RESERVATION_UOM_ID,
		RESERVATION_QUANTITY,
		PRIMARY_RESERVATION_QUANTITY,
		AUTODETAIL_GROUP_ID,
		EXTERNAL_SOURCE_CODE,
		EXTERNAL_SOURCE_LINE_ID,
		SUPPLY_SOURCE_TYPE_ID,
		SUPPLY_SOURCE_HEADER_ID,
		SUPPLY_SOURCE_LINE_ID,
		SUPPLY_SOURCE_LINE_DETAIL,
		SUPPLY_SOURCE_NAME,
		REVISION,
		SUBINVENTORY_CODE,
		SUBINVENTORY_ID,
		LOCATOR_ID,
		LOT_NUMBER,
		LOT_NUMBER_ID,
		SERIAL_NUMBER,
		SERIAL_NUMBER_ID,
		PARTIAL_QUANTITIES_ALLOWED,
		AUTO_DETAILED,
		PICK_SLIP_NUMBER,
		LPN_ID,
		LAST_UPDATE_DATE,
		LAST_UPDATED_BY,
		CREATION_DATE,
		CREATED_BY,
		LAST_UPDATE_LOGIN,
		REQUEST_ID,
		PROGRAM_APPLICATION_ID,
		PROGRAM_ID,
		PROGRAM_UPDATE_DATE,
		ATTRIBUTE_CATEGORY,
		ATTRIBUTE1,
		ATTRIBUTE2,
		ATTRIBUTE3,
		ATTRIBUTE4,
		ATTRIBUTE5,
		ATTRIBUTE6,
		ATTRIBUTE7,
		ATTRIBUTE8,
		ATTRIBUTE9,
		ATTRIBUTE10,
		ATTRIBUTE11,
		ATTRIBUTE12,
		ATTRIBUTE13,
		ATTRIBUTE14,
		ATTRIBUTE15,
		SHIP_READY_FLAG,
		N_COLUMN1,
		DETAILED_QUANTITY,
		COST_GROUP_ID,
		CONTAINER_LPN_ID,
		STAGED_FLAG,
		SECONDARY_DETAILED_QUANTITY,
		SECONDARY_RESERVATION_QUANTITY,
		SECONDARY_UOM_CODE,
		SECONDARY_UOM_ID,
		CROSSDOCK_FLAG,
		CROSSDOCK_CRITERIA_ID,
		DEMAND_SOURCE_LINE_DETAIL,
		SERIAL_RESERVATION_QUANTITY,
		SUPPLY_RECEIPT_DATE,
		DEMAND_SHIP_DATE,
		EXCEPTION_CODE,
		ORIG_SUPPLY_SOURCE_TYPE_ID,
		ORIG_SUPPLY_SOURCE_HEADER_ID,
		ORIG_SUPPLY_SOURCE_LINE_ID,
		ORIG_SUPPLY_SOURCE_LINE_DETAIL,
		ORIG_DEMAND_SOURCE_TYPE_ID,
		ORIG_DEMAND_SOURCE_HEADER_ID,
		ORIG_DEMAND_SOURCE_LINE_ID,
		ORIG_DEMAND_SOURCE_LINE_DETAIL,
		PROJECT_ID,
		TASK_ID,
		MCC_CODE,
        KCA_OPERATION,
        IS_DELETED_FLG,
		kca_seq_id,
	kca_seq_date)	
(
	select
		RESERVATION_ID,
		REQUIREMENT_DATE,
		ORGANIZATION_ID,
		INVENTORY_ITEM_ID,
		DEMAND_SOURCE_TYPE_ID,
		DEMAND_SOURCE_NAME,
		DEMAND_SOURCE_HEADER_ID,
		DEMAND_SOURCE_LINE_ID,
		DEMAND_SOURCE_DELIVERY,
		PRIMARY_UOM_CODE,
		PRIMARY_UOM_ID,
		RESERVATION_UOM_CODE,
		RESERVATION_UOM_ID,
		RESERVATION_QUANTITY,
		PRIMARY_RESERVATION_QUANTITY,
		AUTODETAIL_GROUP_ID,
		EXTERNAL_SOURCE_CODE,
		EXTERNAL_SOURCE_LINE_ID,
		SUPPLY_SOURCE_TYPE_ID,
		SUPPLY_SOURCE_HEADER_ID,
		SUPPLY_SOURCE_LINE_ID,
		SUPPLY_SOURCE_LINE_DETAIL,
		SUPPLY_SOURCE_NAME,
		REVISION,
		SUBINVENTORY_CODE,
		SUBINVENTORY_ID,
		LOCATOR_ID,
		LOT_NUMBER,
		LOT_NUMBER_ID,
		SERIAL_NUMBER,
		SERIAL_NUMBER_ID,
		PARTIAL_QUANTITIES_ALLOWED,
		AUTO_DETAILED,
		PICK_SLIP_NUMBER,
		LPN_ID,
		LAST_UPDATE_DATE,
		LAST_UPDATED_BY,
		CREATION_DATE,
		CREATED_BY,
		LAST_UPDATE_LOGIN,
		REQUEST_ID,
		PROGRAM_APPLICATION_ID,
		PROGRAM_ID,
		PROGRAM_UPDATE_DATE,
		ATTRIBUTE_CATEGORY,
		ATTRIBUTE1,
		ATTRIBUTE2,
		ATTRIBUTE3,
		ATTRIBUTE4,
		ATTRIBUTE5,
		ATTRIBUTE6,
		ATTRIBUTE7,
		ATTRIBUTE8,
		ATTRIBUTE9,
		ATTRIBUTE10,
		ATTRIBUTE11,
		ATTRIBUTE12,
		ATTRIBUTE13,
		ATTRIBUTE14,
		ATTRIBUTE15,
		SHIP_READY_FLAG,
		N_COLUMN1,
		DETAILED_QUANTITY,
		COST_GROUP_ID,
		CONTAINER_LPN_ID,
		STAGED_FLAG,
		SECONDARY_DETAILED_QUANTITY,
		SECONDARY_RESERVATION_QUANTITY,
		SECONDARY_UOM_CODE,
		SECONDARY_UOM_ID,
		CROSSDOCK_FLAG,
		CROSSDOCK_CRITERIA_ID,
		DEMAND_SOURCE_LINE_DETAIL,
		SERIAL_RESERVATION_QUANTITY,
		SUPPLY_RECEIPT_DATE,
		DEMAND_SHIP_DATE,
		EXCEPTION_CODE,
		ORIG_SUPPLY_SOURCE_TYPE_ID,
		ORIG_SUPPLY_SOURCE_HEADER_ID,
		ORIG_SUPPLY_SOURCE_LINE_ID,
		ORIG_SUPPLY_SOURCE_LINE_DETAIL,
		ORIG_DEMAND_SOURCE_TYPE_ID,
		ORIG_DEMAND_SOURCE_HEADER_ID,
		ORIG_DEMAND_SOURCE_LINE_ID,
		ORIG_DEMAND_SOURCE_LINE_DETAIL,
		PROJECT_ID,
		TASK_ID,
		MCC_CODE,
        KCA_OPERATION,
       'N' AS IS_DELETED_FLG,
	    cast(NULLIF(KCA_SEQ_ID,'') as numeric(36,0)) as KCA_SEQ_ID,
	kca_seq_date
	from bec_ods_stg.mtl_reservations
	where kca_operation IN ('INSERT','UPDATE') 
	and (nvl(RESERVATION_ID,0),kca_seq_id) in 
	(select nvl(RESERVATION_ID,0) as RESERVATION_ID,max(kca_seq_id) from bec_ods_stg.mtl_reservations 
     where kca_operation IN ('INSERT','UPDATE')
     group by nvl(RESERVATION_ID,0))
);

commit;

 

-- Soft delete
update bec_ods.mtl_reservations set IS_DELETED_FLG = 'N';
commit;
update bec_ods.mtl_reservations set IS_DELETED_FLG = 'Y'
where (RESERVATION_ID)  in
(
select RESERVATION_ID from bec_raw_dl_ext.mtl_reservations
where (RESERVATION_ID,KCA_SEQ_ID)
in 
(
select RESERVATION_ID,max(KCA_SEQ_ID) as KCA_SEQ_ID 
from bec_raw_dl_ext.mtl_reservations
group by RESERVATION_ID
) 
and kca_operation= 'DELETE'
);
commit;
end;

update bec_etl_ctrl.batch_ods_info
set	last_refresh_date = getdate()
where ods_table_name = 'mtl_reservations';

commit;