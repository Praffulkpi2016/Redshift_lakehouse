/*
# Copyright(c) 2022 KPI Partners, Inc. All Rights Reserved.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# author: KPI Partners, Inc.
# version: 2022.06
# description: This script represents Incremental load approach for ODS.
# File Version: KPI v1.0
*/
begin;

-- Delete Records

delete from bec_ods.WIP_TRANSACTION_ACCOUNTS
where (nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0)) in (
select nvl(stg.TRANSACTION_ID,0) as TRANSACTION_ID,nvl(stg.REFERENCE_ACCOUNT,0) as REFERENCE_ACCOUNT,nvl(stg.WIP_SUB_LEDGER_ID,0) as WIP_SUB_LEDGER_ID from bec_ods.WIP_TRANSACTION_ACCOUNTS ods, bec_ods_stg.WIP_TRANSACTION_ACCOUNTS stg
where nvl(ods.TRANSACTION_ID,0) = nvl(stg.TRANSACTION_ID,0) and nvl(ods.REFERENCE_ACCOUNT,0) = nvl(stg.REFERENCE_ACCOUNT,0) and nvl(ods.WIP_SUB_LEDGER_ID,0) = nvl(stg.WIP_SUB_LEDGER_ID,0) and stg.kca_operation IN ('INSERT','UPDATE')
);

commit;

-- Insert records

insert into	bec_ods.WIP_TRANSACTION_ACCOUNTS
       (	
		TRANSACTION_ID, 
		REFERENCE_ACCOUNT, 
		LAST_UPDATE_DATE, 
		LAST_UPDATED_BY, 
		CREATION_DATE, 
		CREATED_BY, 
		LAST_UPDATE_LOGIN, 
		ORGANIZATION_ID, 
		TRANSACTION_DATE, 
		WIP_ENTITY_ID, 
		REPETITIVE_SCHEDULE_ID, 
		ACCOUNTING_LINE_TYPE, 
		TRANSACTION_VALUE, 
		BASE_TRANSACTION_VALUE, 
		CONTRA_SET_ID, 
		PRIMARY_QUANTITY, 
		RATE_OR_AMOUNT, 
		BASIS_TYPE, 
		RESOURCE_ID, 
		COST_ELEMENT_ID, 
		ACTIVITY_ID, 
		CURRENCY_CODE, 
		CURRENCY_CONVERSION_DATE, 
		CURRENCY_CONVERSION_TYPE, 
		CURRENCY_CONVERSION_RATE, 
		OVERHEAD_BASIS_FACTOR, 
		BASIS_RESOURCE_ID, 
		GL_BATCH_ID, 
		REQUEST_ID, 
		PROGRAM_APPLICATION_ID, 
		PROGRAM_ID, 
		PROGRAM_UPDATE_DATE, 
		GL_SL_LINK_ID, 
		WIP_SUB_LEDGER_ID, 
		ENCUMBRANCE_TYPE_ID, 
        KCA_OPERATION,
        IS_DELETED_FLG,
		kca_seq_id
		,kca_seq_date)	
(
	select
		TRANSACTION_ID, 
		REFERENCE_ACCOUNT, 
		LAST_UPDATE_DATE, 
		LAST_UPDATED_BY, 
		CREATION_DATE, 
		CREATED_BY, 
		LAST_UPDATE_LOGIN, 
		ORGANIZATION_ID, 
		TRANSACTION_DATE, 
		WIP_ENTITY_ID, 
		REPETITIVE_SCHEDULE_ID, 
		ACCOUNTING_LINE_TYPE, 
		TRANSACTION_VALUE, 
		BASE_TRANSACTION_VALUE, 
		CONTRA_SET_ID, 
		PRIMARY_QUANTITY, 
		RATE_OR_AMOUNT, 
		BASIS_TYPE, 
		RESOURCE_ID, 
		COST_ELEMENT_ID, 
		ACTIVITY_ID, 
		CURRENCY_CODE, 
		CURRENCY_CONVERSION_DATE, 
		CURRENCY_CONVERSION_TYPE, 
		CURRENCY_CONVERSION_RATE, 
		OVERHEAD_BASIS_FACTOR, 
		BASIS_RESOURCE_ID, 
		GL_BATCH_ID, 
		REQUEST_ID, 
		PROGRAM_APPLICATION_ID, 
		PROGRAM_ID, 
		PROGRAM_UPDATE_DATE, 
		GL_SL_LINK_ID, 
		WIP_SUB_LEDGER_ID, 
		ENCUMBRANCE_TYPE_ID,
        KCA_OPERATION,
       'N' AS IS_DELETED_FLG,
	    cast(NULLIF(KCA_SEQ_ID,'') as numeric(36,0)) as KCA_SEQ_ID,
		KCA_SEQ_DATE
	from bec_ods_stg.WIP_TRANSACTION_ACCOUNTS
	where kca_operation in ('INSERT','UPDATE') 
	and (nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0),kca_seq_id) in 
	(select nvl(TRANSACTION_ID,0) as TRANSACTION_ID,nvl(REFERENCE_ACCOUNT,0) as REFERENCE_ACCOUNT,nvl(WIP_SUB_LEDGER_ID,0) as WIP_SUB_LEDGER_ID,max(kca_seq_id) from bec_ods_stg.WIP_TRANSACTION_ACCOUNTS 
     where kca_operation in ('INSERT','UPDATE')
     group by nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0))
);

commit;



-- Soft delete
update bec_ods.WIP_TRANSACTION_ACCOUNTS set IS_DELETED_FLG = 'N';
commit;
update bec_ods.WIP_TRANSACTION_ACCOUNTS set IS_DELETED_FLG = 'Y'
where (nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0))  in
(
select nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0) from bec_raw_dl_ext.WIP_TRANSACTION_ACCOUNTS
where (nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0),KCA_SEQ_ID)
in 
(
select nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0),max(KCA_SEQ_ID) as KCA_SEQ_ID 
from bec_raw_dl_ext.WIP_TRANSACTION_ACCOUNTS
group by nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(WIP_SUB_LEDGER_ID,0)
) 
and kca_operation= 'DELETE'
);
commit;

end;

update bec_etl_ctrl.batch_ods_info
set	last_refresh_date = getdate()
where ods_table_name = 'wip_transaction_accounts';

commit;