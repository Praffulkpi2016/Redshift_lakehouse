/*
# Copyright(c) 2022 KPI Partners, Inc. All Rights Reserved.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# author: KPI Partners, Inc.
# version: 2022.06
# description: This script represents Incremental load approach for ODS.
# File Version: KPI v1.0
*/
begin;

-- Delete Records

delete from bec_ods.JTF_TASKS_B
where (nvl(TASK_ID,0)) in (
select nvl(stg.TASK_ID,0) as TASK_ID from bec_ods.JTF_TASKS_B ods, bec_ods_stg.JTF_TASKS_B stg
where nvl(ods.TASK_ID,0) = nvl(stg.TASK_ID,0) 
and stg.kca_operation IN ('INSERT','UPDATE')
);

commit;

-- Insert records

insert into	bec_ods.JTF_TASKS_B
       (	
		TASK_ID, 
		CREATED_BY, 
		CREATION_DATE, 
		LAST_UPDATED_BY, 
		LAST_UPDATE_DATE, 
		LAST_UPDATE_LOGIN, 
		OBJECT_VERSION_NUMBER, 
		TASK_NUMBER, 
		TASK_TYPE_ID, 
		TASK_STATUS_ID, 
		TASK_PRIORITY_ID, 
		OWNER_ID, 
		OWNER_TYPE_CODE, 
		OWNER_TERRITORY_ID, 
		ASSIGNED_BY_ID, 
		CUST_ACCOUNT_ID, 
		CUSTOMER_ID, 
		ADDRESS_ID, 
		PLANNED_START_DATE, 
		PLANNED_END_DATE, 
		SCHEDULED_START_DATE, 
		SCHEDULED_END_DATE, 
		ACTUAL_START_DATE, 
		ACTUAL_END_DATE, 
		SOURCE_OBJECT_TYPE_CODE, 
		TIMEZONE_ID, 
		SOURCE_OBJECT_ID, 
		SOURCE_OBJECT_NAME, 
		DURATION, 
		DURATION_UOM, 
		PLANNED_EFFORT, 
		PLANNED_EFFORT_UOM, 
		ACTUAL_EFFORT, 
		ACTUAL_EFFORT_UOM, 
		PERCENTAGE_COMPLETE, 
		REASON_CODE, 
		PRIVATE_FLAG, 
		PUBLISH_FLAG, 
		RESTRICT_CLOSURE_FLAG, 
		MULTI_BOOKED_FLAG, 
		MILESTONE_FLAG, 
		HOLIDAY_FLAG, 
		BILLABLE_FLAG, 
		BOUND_MODE_CODE, 
		SOFT_BOUND_FLAG, 
		WORKFLOW_PROCESS_ID, 
		NOTIFICATION_FLAG, 
		NOTIFICATION_PERIOD, 
		NOTIFICATION_PERIOD_UOM, 
		PARENT_TASK_ID, 
		RECURRENCE_RULE_ID, 
		ALARM_START, 
		ALARM_START_UOM, 
		ALARM_ON, 
		ALARM_COUNT, 
		ALARM_FIRED_COUNT, 
		ALARM_INTERVAL, 
		ALARM_INTERVAL_UOM, 
		DELETED_FLAG, 
		PALM_FLAG, 
		WINCE_FLAG, 
		LAPTOP_FLAG, 
		DEVICE1_FLAG, 
		DEVICE2_FLAG, 
		DEVICE3_FLAG, 
		COSTS, 
		CURRENCY_CODE, 
		ORG_ID, 
		ESCALATION_LEVEL, 
		ATTRIBUTE1, 
		ATTRIBUTE2, 
		ATTRIBUTE3, 
		ATTRIBUTE4, 
		ATTRIBUTE5, 
		ATTRIBUTE6, 
		ATTRIBUTE7, 
		ATTRIBUTE8, 
		ATTRIBUTE9, 
		ATTRIBUTE10, 
		ATTRIBUTE11, 
		ATTRIBUTE12, 
		ATTRIBUTE13, 
		ATTRIBUTE14, 
		ATTRIBUTE15, 
		ATTRIBUTE_CATEGORY, 
		SECURITY_GROUP_ID, 
		ORIG_SYSTEM_REFERENCE, 
		ORIG_SYSTEM_REFERENCE_ID, 
		UPDATE_STATUS_FLAG, 
		CALENDAR_START_DATE, 
		CALENDAR_END_DATE, 
		DATE_SELECTED, 
		TEMPLATE_ID, 
		TEMPLATE_GROUP_ID, 
		OBJECT_CHANGED_DATE, 
		TASK_CONFIRMATION_STATUS, 
		TASK_CONFIRMATION_COUNTER, 
		TASK_SPLIT_FLAG, 
		OPEN_FLAG, 
		ENTITY, 
		CHILD_POSITION, 
		CHILD_SEQUENCE_NUM, 
		LOCATION_ID, 
		CRITICAL_TASK_FLAG, 
		CUST_IMP_LEVEL, 
		FOLLOW_UP_TASK_FLAG, 
		BASE_TASK_ID,
        KCA_OPERATION,
        IS_DELETED_FLG,
		kca_seq_ID,
		kca_seq_date)	
(
	select
		TASK_ID, 
		CREATED_BY, 
		CREATION_DATE, 
		LAST_UPDATED_BY, 
		LAST_UPDATE_DATE, 
		LAST_UPDATE_LOGIN, 
		OBJECT_VERSION_NUMBER, 
		TASK_NUMBER, 
		TASK_TYPE_ID, 
		TASK_STATUS_ID, 
		TASK_PRIORITY_ID, 
		OWNER_ID, 
		OWNER_TYPE_CODE, 
		OWNER_TERRITORY_ID, 
		ASSIGNED_BY_ID, 
		CUST_ACCOUNT_ID, 
		CUSTOMER_ID, 
		ADDRESS_ID, 
		PLANNED_START_DATE, 
		PLANNED_END_DATE, 
		SCHEDULED_START_DATE, 
		SCHEDULED_END_DATE, 
		ACTUAL_START_DATE, 
		ACTUAL_END_DATE, 
		SOURCE_OBJECT_TYPE_CODE, 
		TIMEZONE_ID, 
		SOURCE_OBJECT_ID, 
		SOURCE_OBJECT_NAME, 
		DURATION, 
		DURATION_UOM, 
		PLANNED_EFFORT, 
		PLANNED_EFFORT_UOM, 
		ACTUAL_EFFORT, 
		ACTUAL_EFFORT_UOM, 
		PERCENTAGE_COMPLETE, 
		REASON_CODE, 
		PRIVATE_FLAG, 
		PUBLISH_FLAG, 
		RESTRICT_CLOSURE_FLAG, 
		MULTI_BOOKED_FLAG, 
		MILESTONE_FLAG, 
		HOLIDAY_FLAG, 
		BILLABLE_FLAG, 
		BOUND_MODE_CODE, 
		SOFT_BOUND_FLAG, 
		WORKFLOW_PROCESS_ID, 
		NOTIFICATION_FLAG, 
		NOTIFICATION_PERIOD, 
		NOTIFICATION_PERIOD_UOM, 
		PARENT_TASK_ID, 
		RECURRENCE_RULE_ID, 
		ALARM_START, 
		ALARM_START_UOM, 
		ALARM_ON, 
		ALARM_COUNT, 
		ALARM_FIRED_COUNT, 
		ALARM_INTERVAL, 
		ALARM_INTERVAL_UOM, 
		DELETED_FLAG, 
		PALM_FLAG, 
		WINCE_FLAG, 
		LAPTOP_FLAG, 
		DEVICE1_FLAG, 
		DEVICE2_FLAG, 
		DEVICE3_FLAG, 
		COSTS, 
		CURRENCY_CODE, 
		ORG_ID, 
		ESCALATION_LEVEL, 
		ATTRIBUTE1, 
		ATTRIBUTE2, 
		ATTRIBUTE3, 
		ATTRIBUTE4, 
		ATTRIBUTE5, 
		ATTRIBUTE6, 
		ATTRIBUTE7, 
		ATTRIBUTE8, 
		ATTRIBUTE9, 
		ATTRIBUTE10, 
		ATTRIBUTE11, 
		ATTRIBUTE12, 
		ATTRIBUTE13, 
		ATTRIBUTE14, 
		ATTRIBUTE15, 
		ATTRIBUTE_CATEGORY, 
		SECURITY_GROUP_ID, 
		ORIG_SYSTEM_REFERENCE, 
		ORIG_SYSTEM_REFERENCE_ID, 
		UPDATE_STATUS_FLAG, 
		CALENDAR_START_DATE, 
		CALENDAR_END_DATE, 
		DATE_SELECTED, 
		TEMPLATE_ID, 
		TEMPLATE_GROUP_ID, 
		OBJECT_CHANGED_DATE, 
		TASK_CONFIRMATION_STATUS, 
		TASK_CONFIRMATION_COUNTER, 
		TASK_SPLIT_FLAG, 
		OPEN_FLAG, 
		ENTITY, 
		CHILD_POSITION, 
		CHILD_SEQUENCE_NUM, 
		LOCATION_ID, 
		CRITICAL_TASK_FLAG, 
		CUST_IMP_LEVEL, 
		FOLLOW_UP_TASK_FLAG, 
		BASE_TASK_ID,
        KCA_OPERATION,
       'N' AS IS_DELETED_FLG,
	    cast(NULLIF(KCA_SEQ_ID,'') as numeric(36,0)) as KCA_SEQ_ID,
		kca_seq_date
	from bec_ods_stg.JTF_TASKS_B
	where kca_operation IN ('INSERT','UPDATE') 
	and (nvl(TASK_ID,0),kca_seq_ID) in 
	(select nvl(TASK_ID,0) as TASK_ID,max(kca_seq_ID) as kca_seq_ID from bec_ods_stg.JTF_TASKS_B 
     where kca_operation IN ('INSERT','UPDATE')
     group by nvl(TASK_ID,0))
);

commit;

-- Soft delete
update bec_ods.JTF_TASKS_B set IS_DELETED_FLG = 'N';
commit;
update bec_ods.JTF_TASKS_B set IS_DELETED_FLG = 'Y'
where (TASK_ID)  in
(
select TASK_ID from bec_raw_dl_ext.JTF_TASKS_B
where (TASK_ID,KCA_SEQ_ID)
in 
(
select TASK_ID,max(KCA_SEQ_ID) as KCA_SEQ_ID 
from bec_raw_dl_ext.JTF_TASKS_B
group by TASK_ID
) 
and kca_operation= 'DELETE'
);
commit;

end;

update bec_etl_ctrl.batch_ods_info
set	last_refresh_date = getdate()
where ods_table_name = 'jtf_tasks_b';

commit;