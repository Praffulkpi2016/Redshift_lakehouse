/*
# Copyright(c) 2022 KPI Partners, Inc. All Rights Reserved.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# author: KPI Partners, Inc.
# version: 2022.06
# description: This script represents Incremental load approach for ODS.
# File Version: KPI v1.0
*/
begin;
-- delete records
delete from bec_ods.MTL_TRANSACTION_ACCOUNTS 
where (nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(COST_ELEMENT_ID,0),nvl(PRIMARY_QUANTITY,0),
nvl(RESOURCE_ID,0),nvl(ACCOUNTING_LINE_TYPE,0),nvl(BASE_TRANSACTION_VALUE,0))
in 
(select nvl(stg.TRANSACTION_ID,0) as TRANSACTION_ID,
 nvl(stg.REFERENCE_ACCOUNT,0) as REFERENCE_ACCOUNT,
 nvl(stg.COST_ELEMENT_ID,0) as COST_ELEMENT_ID,
 nvl(stg.PRIMARY_QUANTITY,0) as PRIMARY_QUANTITY
,nvl(stg.RESOURCE_ID,0) as RESOURCE_ID
,nvl(stg.ACCOUNTING_LINE_TYPE,0) as ACCOUNTING_LINE_TYPE
,nvl(stg.BASE_TRANSACTION_VALUE,0) as BASE_TRANSACTION_VALUE
from bec_ods_stg.MTL_TRANSACTION_ACCOUNTS stg
where stg.kca_operation <> 'DELETE'
and nvl(MTL_TRANSACTION_ACCOUNTS.TRANSACTION_ID,0)=nvl(stg.TRANSACTION_ID,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.REFERENCE_ACCOUNT,0) = nvl(stg.REFERENCE_ACCOUNT,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.COST_ELEMENT_ID,0) = nvl(stg.COST_ELEMENT_ID,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.PRIMARY_QUANTITY,0)  = nvl(stg.PRIMARY_QUANTITY,0) 
and nvl(MTL_TRANSACTION_ACCOUNTS.RESOURCE_ID,0) = nvl(stg.RESOURCE_ID,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.ACCOUNTING_LINE_TYPE,0) = nvl(stg.ACCOUNTING_LINE_TYPE,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.BASE_TRANSACTION_VALUE,0) = nvl(stg.BASE_TRANSACTION_VALUE,0)
)
;
commit;
-- Insert records
insert into	bec_ods.MTL_TRANSACTION_ACCOUNTS
       (	
		TRANSACTION_ID, 
		REFERENCE_ACCOUNT, 
		LAST_UPDATE_DATE, 
		LAST_UPDATED_BY, 
		CREATION_DATE, 
		CREATED_BY, 
		LAST_UPDATE_LOGIN, 
		INVENTORY_ITEM_ID, 
		ORGANIZATION_ID, 
		TRANSACTION_DATE, 
		TRANSACTION_SOURCE_ID, 
		TRANSACTION_SOURCE_TYPE_ID, 
		TRANSACTION_VALUE, 
		PRIMARY_QUANTITY, 
		GL_BATCH_ID, 
		ACCOUNTING_LINE_TYPE, 
		BASE_TRANSACTION_VALUE, 
		CONTRA_SET_ID, 
		RATE_OR_AMOUNT, 
		BASIS_TYPE, 
		RESOURCE_ID, 
		COST_ELEMENT_ID, 
		ACTIVITY_ID, 
		CURRENCY_CODE,
		CURRENCY_CONVERSION_DATE, 
		CURRENCY_CONVERSION_TYPE, 
		CURRENCY_CONVERSION_RATE, 
		REQUEST_ID, 
		PROGRAM_APPLICATION_ID, 
		PROGRAM_ID, 
		PROGRAM_UPDATE_DATE, 
		ENCUMBRANCE_TYPE_ID, 
		REPETITIVE_SCHEDULE_ID, 
		GL_SL_LINK_ID, 
		USSGL_TRANSACTION_CODE, 
		INV_SUB_LEDGER_ID,
        KCA_OPERATION,
        IS_DELETED_FLG,
		kca_seq_id,
		VALID_RECORDS_FLG)	
(
	select
		TRANSACTION_ID, 
		REFERENCE_ACCOUNT, 
		LAST_UPDATE_DATE, 
		LAST_UPDATED_BY, 
		CREATION_DATE, 
		CREATED_BY, 
		LAST_UPDATE_LOGIN, 
		INVENTORY_ITEM_ID, 
		ORGANIZATION_ID, 
		TRANSACTION_DATE, 
		TRANSACTION_SOURCE_ID, 
		TRANSACTION_SOURCE_TYPE_ID, 
		TRANSACTION_VALUE, 
		PRIMARY_QUANTITY, 
		GL_BATCH_ID, 
		ACCOUNTING_LINE_TYPE, 
		BASE_TRANSACTION_VALUE, 
		CONTRA_SET_ID, 
		RATE_OR_AMOUNT, 
		BASIS_TYPE, 
		RESOURCE_ID, 
		COST_ELEMENT_ID, 
		ACTIVITY_ID, 
		CURRENCY_CODE,
		CURRENCY_CONVERSION_DATE, 
		CURRENCY_CONVERSION_TYPE, 
		CURRENCY_CONVERSION_RATE, 
		REQUEST_ID, 
		PROGRAM_APPLICATION_ID, 
		PROGRAM_ID, 
		PROGRAM_UPDATE_DATE, 
		ENCUMBRANCE_TYPE_ID, 
		REPETITIVE_SCHEDULE_ID, 
		GL_SL_LINK_ID, 
		USSGL_TRANSACTION_CODE, 
		INV_SUB_LEDGER_ID,
        KCA_OPERATION,
       'N' AS IS_DELETED_FLG,
	    cast(NULLIF(KCA_SEQ_ID,'') as numeric(36,0)) as KCA_SEQ_ID,
		'N' as VALID_RECORDS_FLG
	from bec_ods_stg.MTL_TRANSACTION_ACCOUNTS
	where kca_operation in ('INSERT','UPDATE') 
	and (nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(COST_ELEMENT_ID,0),nvl(PRIMARY_QUANTITY,0),
nvl(RESOURCE_ID,0),nvl(ACCOUNTING_LINE_TYPE,0),nvl(BASE_TRANSACTION_VALUE,0),kca_seq_id) in 
	(select nvl(TRANSACTION_ID,0) as TRANSACTION_ID,
 nvl(REFERENCE_ACCOUNT,0) as REFERENCE_ACCOUNT,
 nvl(COST_ELEMENT_ID,0) as COST_ELEMENT_ID,
 nvl(PRIMARY_QUANTITY,0) as PRIMARY_QUANTITY
,nvl(RESOURCE_ID,0) as RESOURCE_ID
,nvl(ACCOUNTING_LINE_TYPE,0) as ACCOUNTING_LINE_TYPE
,nvl(BASE_TRANSACTION_VALUE,0) as BASE_TRANSACTION_VALUE,max(kca_seq_id) from bec_ods_stg.MTL_TRANSACTION_ACCOUNTS 
     where kca_operation in ('INSERT','UPDATE') 
     group by 
	 nvl(TRANSACTION_ID,0),
 nvl(REFERENCE_ACCOUNT,0),
 nvl(COST_ELEMENT_ID,0),
 nvl(PRIMARY_QUANTITY,0) 
,nvl(RESOURCE_ID,0)
,nvl(ACCOUNTING_LINE_TYPE,0) 
,nvl(BASE_TRANSACTION_VALUE,0))
);
commit;


--Soft delete 
update bec_ods.MTL_TRANSACTION_ACCOUNTS set IS_DELETED_FLG = 'Y'
where (nvl(TRANSACTION_ID,0),nvl(REFERENCE_ACCOUNT,0),nvl(COST_ELEMENT_ID,0),nvl(PRIMARY_QUANTITY,0),
nvl(RESOURCE_ID,0),nvl(ACCOUNTING_LINE_TYPE,0),nvl(BASE_TRANSACTION_VALUE,0))
in 
(select nvl(stg.TRANSACTION_ID,0) as TRANSACTION_ID,
 nvl(stg.REFERENCE_ACCOUNT,0) as REFERENCE_ACCOUNT,
 nvl(stg.COST_ELEMENT_ID,0) as COST_ELEMENT_ID,
 nvl(stg.PRIMARY_QUANTITY,0) as PRIMARY_QUANTITY
,nvl(stg.RESOURCE_ID,0) as RESOURCE_ID
,nvl(stg.ACCOUNTING_LINE_TYPE,0) as ACCOUNTING_LINE_TYPE
,nvl(stg.BASE_TRANSACTION_VALUE,0) as BASE_TRANSACTION_VALUE
from bec_raw_dl_ext.MTL_TRANSACTION_ACCOUNTS stg
where stg.kca_operation = 'DELETE'
and nvl(MTL_TRANSACTION_ACCOUNTS.TRANSACTION_ID,0)=nvl(stg.TRANSACTION_ID,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.REFERENCE_ACCOUNT,0) = nvl(stg.REFERENCE_ACCOUNT,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.COST_ELEMENT_ID,0) = nvl(stg.COST_ELEMENT_ID,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.PRIMARY_QUANTITY,0)  = nvl(stg.PRIMARY_QUANTITY,0) 
and nvl(MTL_TRANSACTION_ACCOUNTS.RESOURCE_ID,0) = nvl(stg.RESOURCE_ID,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.ACCOUNTING_LINE_TYPE,0) = nvl(stg.ACCOUNTING_LINE_TYPE,0)
and nvl(MTL_TRANSACTION_ACCOUNTS.BASE_TRANSACTION_VALUE,0) = nvl(stg.BASE_TRANSACTION_VALUE,0)
)
;
commit;
end;

update bec_etl_ctrl.batch_ods_info
set	last_refresh_date = getdate()
where ods_table_name = 'mtl_transaction_accounts';

commit;