/*
# Copyright(c) 2022 KPI Partners, Inc. All Rights Reserved.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# author: KPI Partners, Inc.
# version: 2022.06
# description: This script represents Incremental load approach for stage.
# File Version: KPI v1.0
*/
begin;

truncate table bec_ods_stg.wip_requirement_operations;

insert into	bec_ods_stg.wip_requirement_operations
   (	
	INVENTORY_ITEM_ID,
	ORGANIZATION_ID,
	WIP_ENTITY_ID,
	OPERATION_SEQ_NUM,
	REPETITIVE_SCHEDULE_ID,
	LAST_UPDATE_DATE,
	LAST_UPDATED_BY,
	CREATION_DATE,
	CREATED_BY,
	LAST_UPDATE_LOGIN,
	REQUEST_ID,
	PROGRAM_APPLICATION_ID,
	PROGRAM_ID,
	PROGRAM_UPDATE_DATE,
	COMPONENT_SEQUENCE_ID,
	DEPARTMENT_ID,
	WIP_SUPPLY_TYPE,
	DATE_REQUIRED,
	REQUIRED_QUANTITY,
	QUANTITY_ISSUED,
	QUANTITY_PER_ASSEMBLY,
	COMMENTS,
	SUPPLY_SUBINVENTORY,
	SUPPLY_LOCATOR_ID,
	MRP_NET_FLAG,
	MPS_REQUIRED_QUANTITY,
	MPS_DATE_REQUIRED,
	SEGMENT1,
	SEGMENT2,
	SEGMENT3,
	SEGMENT4,
	SEGMENT5,
	SEGMENT6,
	SEGMENT7,
	SEGMENT8,
	SEGMENT9,
	SEGMENT10,
	SEGMENT11,
	SEGMENT12,
	SEGMENT13,
	SEGMENT14,
	SEGMENT15,
	SEGMENT16,
	SEGMENT17,
	SEGMENT18,
	SEGMENT19,
	SEGMENT20,
	ATTRIBUTE_CATEGORY,
	ATTRIBUTE1,
	ATTRIBUTE2,
	ATTRIBUTE3,
	ATTRIBUTE4,
	ATTRIBUTE5,
	ATTRIBUTE6,
	ATTRIBUTE7,
	ATTRIBUTE8,
	ATTRIBUTE9,
	ATTRIBUTE10,
	ATTRIBUTE11,
	ATTRIBUTE12,
	ATTRIBUTE13,
	ATTRIBUTE14,
	ATTRIBUTE15,
	RELIEVED_MATL_COMPLETION_QTY,
	RELIEVED_MATL_SCRAP_QUANTITY,
	RELIEVED_MATL_FINAL_COMP_QTY,
	QUANTITY_ALLOCATED,
	QUANTITY_BACKORDERED,
	QUANTITY_RELIEVED,
	COSTED_QUANTITY_ISSUED,
	COSTED_QUANTITY_RELIEVED,
	AUTO_REQUEST_MATERIAL,
	RELEASED_QUANTITY,
	SUGGESTED_VENDOR_NAME,
	VENDOR_ID,
	UNIT_PRICE,
	PRIMARY_COMPONENT_ID,
	BASIS_TYPE,
	COMPONENT_YIELD_FACTOR,
	VENDOR_SITE_ID,
	VENDOR_CONTACT_ID,
    KCA_OPERATION,
	kca_seq_id
	,KCA_SEQ_DATE)
(
	select
		INVENTORY_ITEM_ID,
		ORGANIZATION_ID,
		WIP_ENTITY_ID,
		OPERATION_SEQ_NUM,
		REPETITIVE_SCHEDULE_ID,
		LAST_UPDATE_DATE,
		LAST_UPDATED_BY,
		CREATION_DATE,
		CREATED_BY,
		LAST_UPDATE_LOGIN,
		REQUEST_ID,
		PROGRAM_APPLICATION_ID,
		PROGRAM_ID,
		PROGRAM_UPDATE_DATE,
		COMPONENT_SEQUENCE_ID,
		DEPARTMENT_ID,
		WIP_SUPPLY_TYPE,
		DATE_REQUIRED,
		REQUIRED_QUANTITY,
		QUANTITY_ISSUED,
		QUANTITY_PER_ASSEMBLY,
		COMMENTS,
		SUPPLY_SUBINVENTORY,
		SUPPLY_LOCATOR_ID,
		MRP_NET_FLAG,
		MPS_REQUIRED_QUANTITY,
		MPS_DATE_REQUIRED,
		SEGMENT1,
		SEGMENT2,
		SEGMENT3,
		SEGMENT4,
		SEGMENT5,
		SEGMENT6,
		SEGMENT7,
		SEGMENT8,
		SEGMENT9,
		SEGMENT10,
		SEGMENT11,
		SEGMENT12,
		SEGMENT13,
		SEGMENT14,
		SEGMENT15,
		SEGMENT16,
		SEGMENT17,
		SEGMENT18,
		SEGMENT19,
		SEGMENT20,
		ATTRIBUTE_CATEGORY,
		ATTRIBUTE1,
		ATTRIBUTE2,
		ATTRIBUTE3,
		ATTRIBUTE4,
		ATTRIBUTE5,
		ATTRIBUTE6,
		ATTRIBUTE7,
		ATTRIBUTE8,
		ATTRIBUTE9,
		ATTRIBUTE10,
		ATTRIBUTE11,
		ATTRIBUTE12,
		ATTRIBUTE13,
		ATTRIBUTE14,
		ATTRIBUTE15,
		RELIEVED_MATL_COMPLETION_QTY,
		RELIEVED_MATL_SCRAP_QUANTITY,
		RELIEVED_MATL_FINAL_COMP_QTY,
		QUANTITY_ALLOCATED,
		QUANTITY_BACKORDERED,
		QUANTITY_RELIEVED,
		COSTED_QUANTITY_ISSUED,
		COSTED_QUANTITY_RELIEVED,
		AUTO_REQUEST_MATERIAL,
		RELEASED_QUANTITY,
		SUGGESTED_VENDOR_NAME,
		VENDOR_ID,
		UNIT_PRICE,
		PRIMARY_COMPONENT_ID,
		BASIS_TYPE,
		COMPONENT_YIELD_FACTOR,
		VENDOR_SITE_ID,
		VENDOR_CONTACT_ID,
        KCA_OPERATION,
		kca_seq_id
		,KCA_SEQ_DATE
	from bec_raw_dl_ext.wip_requirement_operations
	where kca_operation != 'DELETE'  and nvl(kca_seq_id,'') != '' 
	and (nvl(INVENTORY_ITEM_ID, 0),
		nvl(WIP_ENTITY_ID, 0),
		nvl(OPERATION_SEQ_NUM, 0),
		nvl(REPETITIVE_SCHEDULE_ID, 0),kca_seq_id) in 
	(select nvl(INVENTORY_ITEM_ID, 0) as INVENTORY_ITEM_ID,
		nvl(WIP_ENTITY_ID, 0) as WIP_ENTITY_ID,
		nvl(OPERATION_SEQ_NUM, 0) as OPERATION_SEQ_NUM,
		nvl(REPETITIVE_SCHEDULE_ID, 0) as REPETITIVE_SCHEDULE_ID,
		max(kca_seq_id) from bec_raw_dl_ext.wip_requirement_operations 
     where kca_operation != 'DELETE'  and nvl(kca_seq_id,'') != ''
     group by nvl(INVENTORY_ITEM_ID, 0),
		nvl(WIP_ENTITY_ID, 0),
		nvl(OPERATION_SEQ_NUM, 0),
		nvl(REPETITIVE_SCHEDULE_ID, 0))
        and	(KCA_SEQ_DATE > (
		select
			(executebegints-prune_days)
		from
			bec_etl_ctrl.batch_ods_info
		where
			ods_table_name = 'wip_requirement_operations')
            )
);
end;