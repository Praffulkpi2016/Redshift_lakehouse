DROP table IF EXISTS BEC_SECURITY.EBS_USER_SECURITY;
CREATE TABLE BEC_SECURITY.EBS_USER_SECURITY AS
SELECT
  USER_NAME,
  EMAIL_ADDRESS,
  CASE WHEN ENTITY_TYPE = 'Inv Org' THEN 'INV_ORG' ELSE UPPER(ENTITY_TYPE) END AS ENTITY_TYPE,
  ENTITY_ID,
  CURRENT_TIMESTAMP() AS DW_LOAD_DATE
FROM (
  SELECT DISTINCT
    FND_USER.USER_NAME AS USER_NAME,
    FND_USER.EMAIL_ADDRESS,
    CAST(CASE
      WHEN SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '1991'
      THEN 'OU'
      WHEN SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '1201'
      THEN 'Ledger'
      ELSE NULL
    END AS STRING) AS ENTITY_TYPE,
    SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE AS ENTITY_ID
  FROM silver_bec_ods.FND_USER_RESP_GROUPS_DIRECT AS FND_USER_RESP_GROUPS_DIRECT, silver_bec_ods.FND_USER AS FND_USER, silver_bec_ods.HR_ALL_ORGANIZATION_UNITS AS HR_ORGANIZATION_UNITS, silver_bec_ods.GL_LEDGERS AS LED, (
    SELECT
      FND_RESPONSIBILITY.RESPONSIBILITY_ID AS RESPONSIBILITY_ID,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_VALUE AS PROFILE_OPTION_VALUE,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_ID AS PROFILE_OPTION_ID,
      FND_PROFILE_OPTION_VALUES.LEVEL_VALUE AS LEVEL_VALUE
    FROM silver_bec_ods.FND_RESPONSIBILITY AS FND_RESPONSIBILITY, silver_bec_ods.FND_PROFILE_OPTION_VALUES AS FND_PROFILE_OPTION_VALUES
    WHERE
      (
        1 = 1
      )
      AND (
        FND_RESPONSIBILITY.RESPONSIBILITY_ID = FND_PROFILE_OPTION_VALUES.LEVEL_VALUE()
      )
      AND FND_RESPONSIBILITY.APPLICATION_ID = 101
      AND CURRENT_TIMESTAMP() BETWEEN start_date AND COALESCE(end_date, CURRENT_TIMESTAMP() + 1)
  ) AS SQ_FND_RESPONSIBILITY
  WHERE
    (
      1 = 1
    )
    AND (
      (
        FND_USER_RESP_GROUPS_DIRECT.END_DATE IS NULL
        AND SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '1201'
        OR FND_USER_RESP_GROUPS_DIRECT.END_DATE >= FLOOR(CURRENT_TIMESTAMP())
      )
    )
    AND (
      FND_USER_RESP_GROUPS_DIRECT.RESPONSIBILITY_ID = SQ_FND_RESPONSIBILITY.RESPONSIBILITY_ID
    )
    AND (
      SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE = CAST((
        HR_ORGANIZATION_UNITS.ORGANIZATION_ID
      ) AS STRING)
      OR SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE = CAST((
        LED.LEDGER_ID
      ) AS STRING)
    )
    AND (
      FND_USER_RESP_GROUPS_DIRECT.USER_ID = FND_USER.USER_ID
    )
  UNION
  SELECT DISTINCT
    FND_USER.USER_NAME AS USER_NAME,
    FND_USER.EMAIL_ADDRESS,
    CAST(CASE
      WHEN SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '9930'
      THEN 'Ledger'
      ELSE NULL
    END AS STRING) AS ENTITY_TYPE,
    CAST(LED.ledger_id AS STRING) AS ENTITY_ID
  FROM silver_bec_ods.FND_USER_RESP_GROUPS_DIRECT AS FND_USER_RESP_GROUPS_DIRECT, silver_bec_ods.FND_USER AS FND_USER, silver_bec_ods.HR_ALL_ORGANIZATION_UNITS AS HR_ORGANIZATION_UNITS, silver_bec_ods.GL_LEDGERS AS LED, silver_bec_ods.gl_access_set_ledgers AS access_led, (
    SELECT
      FND_RESPONSIBILITY.RESPONSIBILITY_ID AS RESPONSIBILITY_ID,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_VALUE AS PROFILE_OPTION_VALUE,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_ID AS PROFILE_OPTION_ID,
      FND_PROFILE_OPTION_VALUES.LEVEL_VALUE AS LEVEL_VALUE
    FROM silver_bec_ods.FND_RESPONSIBILITY AS FND_RESPONSIBILITY, silver_bec_ods.FND_PROFILE_OPTION_VALUES AS FND_PROFILE_OPTION_VALUES
    WHERE
      (
        1 = 1
      )
      AND (
        FND_RESPONSIBILITY.RESPONSIBILITY_ID = FND_PROFILE_OPTION_VALUES.LEVEL_VALUE
      )
      AND FND_RESPONSIBILITY.APPLICATION_ID = 101
      AND FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_ID = '9930'
      AND CURRENT_TIMESTAMP() BETWEEN start_date AND COALESCE(end_date, CURRENT_TIMESTAMP() + 1)
  ) AS SQ_FND_RESPONSIBILITY
  WHERE
    (
      1 = 1
    )
    AND (
      (
        FND_USER_RESP_GROUPS_DIRECT.END_DATE IS NULL
        OR FND_USER_RESP_GROUPS_DIRECT.END_DATE >= FLOOR(CURRENT_TIMESTAMP())
      )
    )
    AND (
      FND_USER_RESP_GROUPS_DIRECT.RESPONSIBILITY_ID = SQ_FND_RESPONSIBILITY.RESPONSIBILITY_ID
    )
    AND SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE = CAST((
      access_led.access_set_id
    ) AS STRING)
    AND access_led.ledger_id = LED.ledger_id
    AND (
      FND_USER_RESP_GROUPS_DIRECT.USER_ID = FND_USER.USER_ID
    )
  UNION
  SELECT DISTINCT
    FND_USER.USER_NAME AS USER_NAME,
    FND_USER.EMAIL_ADDRESS,
    CAST(CASE
      WHEN SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '1991'
      THEN 'OU'
      WHEN SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '1201'
      THEN 'Ledger'
      ELSE NULL
    END AS STRING) AS ENTITY_TYPE,
    SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE AS ENTITY_ID
  FROM silver_bec_ods.FND_USER_RESP_GROUPS_DIRECT AS FND_USER_RESP_GROUPS_DIRECT, silver_bec_ods.FND_USER AS FND_USER, silver_bec_ods.HR_ALL_ORGANIZATION_UNITS AS HR_ORGANIZATION_UNITS, silver_bec_ods.GL_LEDGERS AS LED, (
    SELECT
      FND_RESPONSIBILITY.RESPONSIBILITY_ID AS RESPONSIBILITY_ID,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_VALUE AS PROFILE_OPTION_VALUE,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_ID AS PROFILE_OPTION_ID,
      FND_PROFILE_OPTION_VALUES.LEVEL_VALUE AS LEVEL_VALUE
    FROM silver_bec_ods.FND_RESPONSIBILITY AS FND_RESPONSIBILITY, silver_bec_ods.FND_PROFILE_OPTION_VALUES AS FND_PROFILE_OPTION_VALUES
    WHERE
      (
        1 = 1
      )
      AND (
        FND_RESPONSIBILITY.RESPONSIBILITY_ID = FND_PROFILE_OPTION_VALUES.LEVEL_VALUE()
      )
      AND FND_RESPONSIBILITY.APPLICATION_ID <> 101
      AND CURRENT_TIMESTAMP() BETWEEN start_date AND COALESCE(end_date, CURRENT_TIMESTAMP() + 1)
  ) AS SQ_FND_RESPONSIBILITY
  WHERE
    (
      1 = 1
    )
    AND (
      (
        FND_USER_RESP_GROUPS_DIRECT.END_DATE IS NULL
        AND SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '1991'
        OR FND_USER_RESP_GROUPS_DIRECT.END_DATE >= FLOOR(CURRENT_TIMESTAMP())
      )
    )
    AND (
      FND_USER_RESP_GROUPS_DIRECT.RESPONSIBILITY_ID = SQ_FND_RESPONSIBILITY.RESPONSIBILITY_ID
    )
    AND (
      SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE = CAST((
        HR_ORGANIZATION_UNITS.ORGANIZATION_ID
      ) AS STRING)
      OR SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE = CAST((
        LED.LEDGER_ID
      ) AS STRING)
    )
    AND (
      FND_USER_RESP_GROUPS_DIRECT.USER_ID = FND_USER.USER_ID
    )
  UNION
  SELECT DISTINCT
    FND_USER.USER_NAME AS USER_NAME,
    FND_USER.EMAIL_ADDRESS,
    'Inv Org' AS ENTITY_TYPE,
    CAST(OOD.ORGANIZATION_ID AS STRING) AS ENTITY_ID
  FROM silver_bec_ods.FND_USER_RESP_GROUPS_DIRECT AS FND_USER_RESP_GROUPS_DIRECT, silver_bec_ods.FND_USER AS FND_USER, silver_bec_ods.HR_ALL_ORGANIZATION_UNITS AS HR_ORGANIZATION_UNITS, silver_bec_ods.ORG_ORGANIZATION_DEFINITIONS AS OOD, (
    SELECT
      FND_RESPONSIBILITY.RESPONSIBILITY_ID AS RESPONSIBILITY_ID,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_VALUE AS PROFILE_OPTION_VALUE,
      FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_ID AS PROFILE_OPTION_ID,
      FND_PROFILE_OPTION_VALUES.LEVEL_VALUE AS LEVEL_VALUE
    FROM silver_bec_ods.FND_RESPONSIBILITY AS FND_RESPONSIBILITY, silver_bec_ods.FND_PROFILE_OPTION_VALUES AS FND_PROFILE_OPTION_VALUES
    WHERE
      (
        1 = 1
      )
      AND (
        FND_RESPONSIBILITY.RESPONSIBILITY_ID = FND_PROFILE_OPTION_VALUES.LEVEL_VALUE()
      )
      AND CURRENT_TIMESTAMP() BETWEEN start_date AND COALESCE(end_date, CURRENT_TIMESTAMP() + 1)
  ) AS SQ_FND_RESPONSIBILITY
  WHERE
    (
      1 = 1
    )
    AND (
      (
        FND_USER_RESP_GROUPS_DIRECT.END_DATE IS NULL
        AND SQ_FND_RESPONSIBILITY.PROFILE_OPTION_ID = '1991'
        OR FND_USER_RESP_GROUPS_DIRECT.END_DATE >= FLOOR(CURRENT_TIMESTAMP())
      )
    )
    AND (
      FND_USER_RESP_GROUPS_DIRECT.RESPONSIBILITY_ID = SQ_FND_RESPONSIBILITY.RESPONSIBILITY_ID
    )
    AND (
      SQ_FND_RESPONSIBILITY.PROFILE_OPTION_VALUE = (
        CAST(HR_ORGANIZATION_UNITS.ORGANIZATION_ID AS STRING)
      )
    )
    AND CAST((
      HR_ORGANIZATION_UNITS.ORGANIZATION_ID
    ) AS STRING) = CAST((
      OOD.OPERATING_UNIT
    ) AS STRING)
    AND FND_USER_RESP_GROUPS_DIRECT.USER_ID = FND_USER.USER_ID
)
WHERE
  1 = 1 AND NOT ENTITY_TYPE IS NULL;
UPDATE bec_etl_ctrl.batch_dw_info SET last_refresh_date = CURRENT_TIMESTAMP(), load_type = 'I'
WHERE
  dw_table_name = 'ebs_user_security' AND batch_name = 'security';