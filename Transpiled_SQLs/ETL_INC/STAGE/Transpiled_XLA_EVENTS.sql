TRUNCATE table bronze_bec_ods_stg.XLA_EVENTS;
INSERT INTO bronze_bec_ods_stg.XLA_EVENTS (
  EVENT_ID,
  APPLICATION_ID,
  EVENT_TYPE_CODE,
  EVENT_DATE,
  ENTITY_ID,
  EVENT_STATUS_CODE,
  PROCESS_STATUS_CODE,
  REFERENCE_NUM_1,
  REFERENCE_NUM_2,
  REFERENCE_NUM_3,
  REFERENCE_NUM_4,
  REFERENCE_CHAR_1,
  REFERENCE_CHAR_2,
  REFERENCE_CHAR_3,
  REFERENCE_CHAR_4,
  REFERENCE_DATE_1,
  REFERENCE_DATE_2,
  REFERENCE_DATE_3,
  REFERENCE_DATE_4,
  EVENT_NUMBER,
  ON_HOLD_FLAG,
  CREATION_DATE,
  CREATED_BY,
  LAST_UPDATE_DATE,
  LAST_UPDATED_BY,
  LAST_UPDATE_LOGIN,
  PROGRAM_UPDATE_DATE,
  PROGRAM_APPLICATION_ID,
  PROGRAM_ID,
  REQUEST_ID,
  UPG_BATCH_ID,
  UPG_SOURCE_APPLICATION_ID,
  UPG_VALID_FLAG,
  TRANSACTION_DATE,
  BUDGETARY_CONTROL_FLAG,
  MERGE_EVENT_SET_ID,
  KCA_OPERATION,
  KCA_SEQ_ID,
  KCA_SEQ_DATE
)
(
  SELECT
    EVENT_ID,
    APPLICATION_ID,
    EVENT_TYPE_CODE,
    EVENT_DATE,
    ENTITY_ID,
    EVENT_STATUS_CODE,
    PROCESS_STATUS_CODE,
    REFERENCE_NUM_1,
    REFERENCE_NUM_2,
    REFERENCE_NUM_3,
    REFERENCE_NUM_4,
    REFERENCE_CHAR_1,
    REFERENCE_CHAR_2,
    REFERENCE_CHAR_3,
    REFERENCE_CHAR_4,
    REFERENCE_DATE_1,
    REFERENCE_DATE_2,
    REFERENCE_DATE_3,
    REFERENCE_DATE_4,
    EVENT_NUMBER,
    ON_HOLD_FLAG,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    PROGRAM_UPDATE_DATE,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    REQUEST_ID,
    UPG_BATCH_ID,
    UPG_SOURCE_APPLICATION_ID,
    UPG_VALID_FLAG,
    TRANSACTION_DATE,
    BUDGETARY_CONTROL_FLAG,
    MERGE_EVENT_SET_ID,
    KCA_OPERATION,
    KCA_SEQ_ID,
    KCA_SEQ_DATE
  FROM bec_raw_dl_ext.XLA_EVENTS
  WHERE
    kca_operation <> 'DELETE'
    AND COALESCE(kca_seq_id, '') <> ''
    AND (EVENT_ID, kca_seq_id) IN (
      SELECT
        EVENT_ID,
        MAX(kca_seq_id)
      FROM bec_raw_dl_ext.XLA_EVENTS
      WHERE
        kca_operation <> 'DELETE' AND COALESCE(kca_seq_id, '') <> ''
      GROUP BY
        EVENT_ID
    )
    AND (
      KCA_SEQ_DATE > (
        SELECT
          (
            executebegints - prune_days
          )
        FROM bec_etl_ctrl.batch_ods_info
        WHERE
          ods_table_name = 'xla_events'
      )
    )
);