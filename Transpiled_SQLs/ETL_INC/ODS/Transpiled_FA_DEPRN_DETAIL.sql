/* Delete Records */
DELETE FROM silver_bec_ods.fa_deprn_detail
WHERE
  (COALESCE(BOOK_TYPE_CODE, 'NA'), COALESCE(ASSET_ID, 0), COALESCE(DISTRIBUTION_ID, 0), COALESCE(PERIOD_COUNTER, 0)) IN (
    SELECT
      COALESCE(stg.BOOK_TYPE_CODE, 'NA') AS BOOK_TYPE_CODE,
      COALESCE(stg.ASSET_ID, 0) AS ASSET_ID,
      COALESCE(stg.DISTRIBUTION_ID, 0) AS DISTRIBUTION_ID,
      COALESCE(stg.PERIOD_COUNTER, 0) AS PERIOD_COUNTER
    FROM silver_bec_ods.fa_deprn_detail AS ods, bronze_bec_ods_stg.fa_deprn_detail AS stg
    WHERE
      COALESCE(ods.BOOK_TYPE_CODE, 'NA') = COALESCE(stg.BOOK_TYPE_CODE, 'NA')
      AND COALESCE(ods.ASSET_ID, 0) = COALESCE(stg.ASSET_ID, 0)
      AND COALESCE(ods.DISTRIBUTION_ID, 0) = COALESCE(stg.DISTRIBUTION_ID, 0)
      AND COALESCE(ods.PERIOD_COUNTER, 0) = COALESCE(stg.PERIOD_COUNTER, 0)
      AND stg.kca_operation IN ('INSERT', 'UPDATE')
  );
/* Insert records */
INSERT INTO silver_bec_ods.fa_deprn_detail (
  BOOK_TYPE_CODE,
  ASSET_ID,
  PERIOD_COUNTER,
  DISTRIBUTION_ID,
  DEPRN_SOURCE_CODE,
  DEPRN_RUN_DATE,
  DEPRN_AMOUNT,
  YTD_DEPRN,
  DEPRN_RESERVE,
  ADDITION_COST_TO_CLEAR,
  COST,
  DEPRN_ADJUSTMENT_AMOUNT,
  DEPRN_EXPENSE_JE_LINE_NUM,
  DEPRN_RESERVE_JE_LINE_NUM,
  REVAL_AMORT_JE_LINE_NUM,
  REVAL_RESERVE_JE_LINE_NUM,
  JE_HEADER_ID,
  REVAL_AMORTIZATION,
  REVAL_DEPRN_EXPENSE,
  REVAL_RESERVE,
  YTD_REVAL_DEPRN_EXPENSE,
  BONUS_DEPRN_AMOUNT,
  BONUS_YTD_DEPRN,
  BONUS_DEPRN_RESERVE,
  BONUS_DEPRN_ADJUSTMENT_AMOUNT,
  BONUS_DEPRN_EXP_JE_LINE_NUM,
  BONUS_DEPRN_RSV_JE_LINE_NUM,
  DEPRN_EXPENSE_CCID,
  DEPRN_RESERVE_CCID,
  BONUS_DEPRN_EXPENSE_CCID,
  BONUS_DEPRN_RESERVE_CCID,
  REVAL_AMORT_CCID,
  REVAL_RESERVE_CCID,
  EVENT_ID,
  DEPRN_RUN_ID,
  IMPAIRMENT_AMOUNT,
  YTD_IMPAIRMENT,
  IMPAIRMENT_RESERVE,
  CAPITAL_ADJUSTMENT,
  GENERAL_FUND,
  REVAL_LOSS_BALANCE,
  KCA_OPERATION,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
(
  SELECT
    BOOK_TYPE_CODE,
    ASSET_ID,
    PERIOD_COUNTER,
    DISTRIBUTION_ID,
    DEPRN_SOURCE_CODE,
    DEPRN_RUN_DATE,
    DEPRN_AMOUNT,
    YTD_DEPRN,
    DEPRN_RESERVE,
    ADDITION_COST_TO_CLEAR,
    COST,
    DEPRN_ADJUSTMENT_AMOUNT,
    DEPRN_EXPENSE_JE_LINE_NUM,
    DEPRN_RESERVE_JE_LINE_NUM,
    REVAL_AMORT_JE_LINE_NUM,
    REVAL_RESERVE_JE_LINE_NUM,
    JE_HEADER_ID,
    REVAL_AMORTIZATION,
    REVAL_DEPRN_EXPENSE,
    REVAL_RESERVE,
    YTD_REVAL_DEPRN_EXPENSE,
    BONUS_DEPRN_AMOUNT,
    BONUS_YTD_DEPRN,
    BONUS_DEPRN_RESERVE,
    BONUS_DEPRN_ADJUSTMENT_AMOUNT,
    BONUS_DEPRN_EXP_JE_LINE_NUM,
    BONUS_DEPRN_RSV_JE_LINE_NUM,
    DEPRN_EXPENSE_CCID,
    DEPRN_RESERVE_CCID,
    BONUS_DEPRN_EXPENSE_CCID,
    BONUS_DEPRN_RESERVE_CCID,
    REVAL_AMORT_CCID,
    REVAL_RESERVE_CCID,
    EVENT_ID,
    DEPRN_RUN_ID,
    IMPAIRMENT_AMOUNT,
    YTD_IMPAIRMENT,
    IMPAIRMENT_RESERVE,
    CAPITAL_ADJUSTMENT,
    GENERAL_FUND,
    REVAL_LOSS_BALANCE,
    KCA_OPERATION,
    'N' AS IS_DELETED_FLG,
    CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
    kca_seq_date
  FROM bronze_bec_ods_stg.fa_deprn_detail
  WHERE
    kca_operation IN ('INSERT', 'UPDATE')
    AND (COALESCE(BOOK_TYPE_CODE, 'NA'), COALESCE(ASSET_ID, 0), COALESCE(DISTRIBUTION_ID, 0), COALESCE(PERIOD_COUNTER, 0), kca_seq_id) IN (
      SELECT
        COALESCE(BOOK_TYPE_CODE, 'NA') AS BOOK_TYPE_CODE,
        COALESCE(ASSET_ID, 0) AS ASSET_ID,
        COALESCE(DISTRIBUTION_ID, 0) AS DISTRIBUTION_ID,
        COALESCE(PERIOD_COUNTER, 0) AS PERIOD_COUNTER,
        MAX(kca_seq_id)
      FROM bronze_bec_ods_stg.fa_deprn_detail
      WHERE
        kca_operation IN ('INSERT', 'UPDATE')
      GROUP BY
        COALESCE(BOOK_TYPE_CODE, 'NA'),
        COALESCE(ASSET_ID, 0),
        COALESCE(DISTRIBUTION_ID, 0),
        COALESCE(PERIOD_COUNTER, 0)
    )
);
/* Soft delete */
UPDATE silver_bec_ods.fa_deprn_detail SET IS_DELETED_FLG = 'N';
UPDATE silver_bec_ods.fa_deprn_detail SET IS_DELETED_FLG = 'Y'
WHERE
  (COALESCE(BOOK_TYPE_CODE, 'NA'), COALESCE(ASSET_ID, 0), COALESCE(DISTRIBUTION_ID, 0), COALESCE(PERIOD_COUNTER, 0)) IN (
    SELECT
      COALESCE(BOOK_TYPE_CODE, 'NA'),
      COALESCE(ASSET_ID, 0),
      COALESCE(DISTRIBUTION_ID, 0),
      COALESCE(PERIOD_COUNTER, 0)
    FROM bec_raw_dl_ext.fa_deprn_detail
    WHERE
      (COALESCE(BOOK_TYPE_CODE, 'NA'), COALESCE(ASSET_ID, 0), COALESCE(DISTRIBUTION_ID, 0), COALESCE(PERIOD_COUNTER, 0), KCA_SEQ_ID) IN (
        SELECT
          COALESCE(BOOK_TYPE_CODE, 'NA'),
          COALESCE(ASSET_ID, 0),
          COALESCE(DISTRIBUTION_ID, 0),
          COALESCE(PERIOD_COUNTER, 0),
          MAX(KCA_SEQ_ID) AS KCA_SEQ_ID
        FROM bec_raw_dl_ext.fa_deprn_detail
        GROUP BY
          COALESCE(BOOK_TYPE_CODE, 'NA'),
          COALESCE(ASSET_ID, 0),
          COALESCE(DISTRIBUTION_ID, 0),
          COALESCE(PERIOD_COUNTER, 0)
      )
      AND kca_operation = 'DELETE'
  );
UPDATE bec_etl_ctrl.batch_ods_info SET last_refresh_date = CURRENT_TIMESTAMP(), load_type = 'I'
WHERE
  ods_table_name = 'fa_deprn_detail';