/* Delete Records */
DELETE FROM silver_bec_ods.FA_RETIREMENTS
WHERE
  (
    COALESCE(RETIREMENT_ID, 0)
  ) IN (
    SELECT
      COALESCE(stg.RETIREMENT_ID, 0) AS RETIREMENT_ID
    FROM silver_bec_ods.FA_RETIREMENTS AS ods, bronze_bec_ods_stg.FA_RETIREMENTS AS stg
    WHERE
      COALESCE(ods.RETIREMENT_ID, 0) = COALESCE(stg.RETIREMENT_ID, 0)
      AND stg.kca_operation IN ('INSERT', 'UPDATE')
  );
/* Insert records */
INSERT INTO silver_bec_ods.FA_RETIREMENTS (
  RETIREMENT_ID,
  BOOK_TYPE_CODE,
  ASSET_ID,
  TRANSACTION_HEADER_ID_IN,
  DATE_RETIRED,
  DATE_EFFECTIVE,
  COST_RETIRED,
  STATUS,
  LAST_UPDATE_DATE,
  LAST_UPDATED_BY,
  RETIREMENT_PRORATE_CONVENTION,
  TRANSACTION_HEADER_ID_OUT,
  UNITS,
  COST_OF_REMOVAL,
  NBV_RETIRED,
  GAIN_LOSS_AMOUNT,
  PROCEEDS_OF_SALE,
  GAIN_LOSS_TYPE_CODE,
  RETIREMENT_TYPE_CODE,
  ITC_RECAPTURED,
  ITC_RECAPTURE_ID,
  REFERENCE_NUM,
  SOLD_TO,
  TRADE_IN_ASSET_ID,
  STL_METHOD_CODE,
  STL_LIFE_IN_MONTHS,
  STL_DEPRN_AMOUNT,
  CREATED_BY,
  CREATION_DATE,
  LAST_UPDATE_LOGIN,
  ATTRIBUTE1,
  ATTRIBUTE2,
  ATTRIBUTE3,
  ATTRIBUTE4,
  ATTRIBUTE5,
  ATTRIBUTE6,
  ATTRIBUTE7,
  ATTRIBUTE8,
  ATTRIBUTE9,
  ATTRIBUTE10,
  ATTRIBUTE11,
  ATTRIBUTE12,
  ATTRIBUTE13,
  ATTRIBUTE14,
  ATTRIBUTE15,
  ATTRIBUTE_CATEGORY_CODE,
  REVAL_RESERVE_RETIRED,
  UNREVALUED_COST_RETIRED,
  BONUS_RESERVE_RETIRED,
  RECOGNIZE_GAIN_LOSS,
  REDUCTION_RATE,
  RECAPTURE_RESERVE_FLAG,
  LIMIT_PROCEEDS_FLAG,
  TERMINAL_GAIN_LOSS,
  RESERVE_RETIRED,
  RECAPTURE_AMOUNT,
  EOFY_RESERVE,
  IMPAIR_RESERVE_RETIRED,
  kca_operation,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
(
  SELECT
    RETIREMENT_ID,
    BOOK_TYPE_CODE,
    ASSET_ID,
    TRANSACTION_HEADER_ID_IN,
    DATE_RETIRED,
    DATE_EFFECTIVE,
    COST_RETIRED,
    STATUS,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    RETIREMENT_PRORATE_CONVENTION,
    TRANSACTION_HEADER_ID_OUT,
    UNITS,
    COST_OF_REMOVAL,
    NBV_RETIRED,
    GAIN_LOSS_AMOUNT,
    PROCEEDS_OF_SALE,
    GAIN_LOSS_TYPE_CODE,
    RETIREMENT_TYPE_CODE,
    ITC_RECAPTURED,
    ITC_RECAPTURE_ID,
    REFERENCE_NUM,
    SOLD_TO,
    TRADE_IN_ASSET_ID,
    STL_METHOD_CODE,
    STL_LIFE_IN_MONTHS,
    STL_DEPRN_AMOUNT,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATE_LOGIN,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    ATTRIBUTE_CATEGORY_CODE,
    REVAL_RESERVE_RETIRED,
    UNREVALUED_COST_RETIRED,
    BONUS_RESERVE_RETIRED,
    RECOGNIZE_GAIN_LOSS,
    REDUCTION_RATE,
    RECAPTURE_RESERVE_FLAG,
    LIMIT_PROCEEDS_FLAG,
    TERMINAL_GAIN_LOSS,
    RESERVE_RETIRED,
    RECAPTURE_AMOUNT,
    EOFY_RESERVE,
    IMPAIR_RESERVE_RETIRED,
    kca_operation,
    'N' AS IS_DELETED_FLG,
    CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
    kca_seq_date
  FROM bronze_bec_ods_stg.FA_RETIREMENTS
  WHERE
    kca_operation IN ('INSERT', 'UPDATE')
    AND (COALESCE(RETIREMENT_ID, 0), KCA_SEQ_ID) IN (
      SELECT
        COALESCE(RETIREMENT_ID, 0) AS RETIREMENT_ID,
        MAX(KCA_SEQ_ID)
      FROM bronze_bec_ods_stg.FA_RETIREMENTS
      WHERE
        kca_operation IN ('INSERT', 'UPDATE')
      GROUP BY
        COALESCE(RETIREMENT_ID, 0)
    )
);
/* Soft delete */
UPDATE silver_bec_ods.FA_RETIREMENTS SET IS_DELETED_FLG = 'N';
UPDATE silver_bec_ods.FA_RETIREMENTS SET IS_DELETED_FLG = 'Y'
WHERE
  (
    RETIREMENT_ID
  ) IN (
    SELECT
      RETIREMENT_ID
    FROM bec_raw_dl_ext.FA_RETIREMENTS
    WHERE
      (RETIREMENT_ID, KCA_SEQ_ID) IN (
        SELECT
          RETIREMENT_ID,
          MAX(KCA_SEQ_ID) AS KCA_SEQ_ID
        FROM bec_raw_dl_ext.FA_RETIREMENTS
        GROUP BY
          RETIREMENT_ID
      )
      AND kca_operation = 'DELETE'
  );
UPDATE bec_etl_ctrl.batch_ods_info SET last_refresh_date = CURRENT_TIMESTAMP()
WHERE
  ods_table_name = 'fa_retirements';