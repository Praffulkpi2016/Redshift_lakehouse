/* Delete Records */
DELETE FROM silver_bec_ods.fa_transaction_headers
WHERE
  COALESCE(TRANSACTION_HEADER_ID, 0) IN (
    SELECT
      COALESCE(stg.TRANSACTION_HEADER_ID, 0) AS TRANSACTION_HEADER_ID
    FROM silver_bec_ods.fa_transaction_headers AS ods, bronze_bec_ods_stg.fa_transaction_headers AS stg
    WHERE
      COALESCE(ods.TRANSACTION_HEADER_ID, 0) = COALESCE(stg.TRANSACTION_HEADER_ID, 0)
      AND stg.kca_operation IN ('INSERT', 'UPDATE')
  );
/* Insert records */
INSERT INTO silver_bec_ods.fa_transaction_headers (
  TRANSACTION_HEADER_ID,
  BOOK_TYPE_CODE,
  ASSET_ID,
  TRANSACTION_TYPE_CODE,
  TRANSACTION_DATE_ENTERED,
  DATE_EFFECTIVE,
  LAST_UPDATE_DATE,
  LAST_UPDATED_BY,
  TRANSACTION_NAME,
  INVOICE_TRANSACTION_ID,
  SOURCE_TRANSACTION_HEADER_ID,
  MASS_REFERENCE_ID,
  LAST_UPDATE_LOGIN,
  TRANSACTION_SUBTYPE,
  ATTRIBUTE1,
  ATTRIBUTE2,
  ATTRIBUTE3,
  ATTRIBUTE4,
  ATTRIBUTE5,
  ATTRIBUTE6,
  ATTRIBUTE7,
  ATTRIBUTE8,
  ATTRIBUTE9,
  ATTRIBUTE10,
  ATTRIBUTE11,
  ATTRIBUTE12,
  ATTRIBUTE13,
  ATTRIBUTE14,
  ATTRIBUTE15,
  ATTRIBUTE_CATEGORY_CODE,
  TRANSACTION_KEY,
  AMORTIZATION_START_DATE,
  CALLING_INTERFACE,
  MASS_TRANSACTION_ID,
  MEMBER_TRANSACTION_HEADER_ID,
  TRX_REFERENCE_ID,
  EVENT_ID,
  KCA_OPERATION,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
(
  SELECT
    TRANSACTION_HEADER_ID,
    BOOK_TYPE_CODE,
    ASSET_ID,
    TRANSACTION_TYPE_CODE,
    TRANSACTION_DATE_ENTERED,
    DATE_EFFECTIVE,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    TRANSACTION_NAME,
    INVOICE_TRANSACTION_ID,
    SOURCE_TRANSACTION_HEADER_ID,
    MASS_REFERENCE_ID,
    LAST_UPDATE_LOGIN,
    TRANSACTION_SUBTYPE,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    ATTRIBUTE_CATEGORY_CODE,
    TRANSACTION_KEY,
    AMORTIZATION_START_DATE,
    CALLING_INTERFACE,
    MASS_TRANSACTION_ID,
    MEMBER_TRANSACTION_HEADER_ID,
    TRX_REFERENCE_ID,
    EVENT_ID,
    KCA_OPERATION,
    'N' AS IS_DELETED_FLG,
    CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
    kca_seq_date
  FROM bronze_bec_ods_stg.fa_transaction_headers
  WHERE
    kca_operation IN ('INSERT', 'UPDATE')
    AND (COALESCE(TRANSACTION_HEADER_ID, 0), kca_seq_id) IN (
      SELECT
        COALESCE(TRANSACTION_HEADER_ID, 0) AS TRANSACTION_HEADER_ID,
        MAX(kca_seq_id)
      FROM bronze_bec_ods_stg.fa_transaction_headers
      WHERE
        kca_operation IN ('INSERT', 'UPDATE')
      GROUP BY
        COALESCE(TRANSACTION_HEADER_ID, 0)
    )
);
/* Soft delete */
UPDATE silver_bec_ods.fa_transaction_headers SET IS_DELETED_FLG = 'N';
UPDATE silver_bec_ods.fa_transaction_headers SET IS_DELETED_FLG = 'Y'
WHERE
  (
    TRANSACTION_HEADER_ID
  ) IN (
    SELECT
      TRANSACTION_HEADER_ID
    FROM bec_raw_dl_ext.fa_transaction_headers
    WHERE
      (TRANSACTION_HEADER_ID, KCA_SEQ_ID) IN (
        SELECT
          TRANSACTION_HEADER_ID,
          MAX(KCA_SEQ_ID) AS KCA_SEQ_ID
        FROM bec_raw_dl_ext.fa_transaction_headers
        GROUP BY
          TRANSACTION_HEADER_ID
      )
      AND kca_operation = 'DELETE'
  );
UPDATE bec_etl_ctrl.batch_ods_info SET last_refresh_date = CURRENT_TIMESTAMP()
WHERE
  ods_table_name = 'fa_transaction_headers';