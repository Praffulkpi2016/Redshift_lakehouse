/* Delete Records */
DELETE FROM silver_bec_ods.wip_requirement_operations
WHERE
  (COALESCE(INVENTORY_ITEM_ID, 0), COALESCE(WIP_ENTITY_ID, 0), COALESCE(OPERATION_SEQ_NUM, 0), COALESCE(REPETITIVE_SCHEDULE_ID, 0)) IN (
    SELECT
      COALESCE(stg.INVENTORY_ITEM_ID, 0) AS INVENTORY_ITEM_ID,
      COALESCE(stg.WIP_ENTITY_ID, 0) AS WIP_ENTITY_ID,
      COALESCE(stg.OPERATION_SEQ_NUM, 0) AS OPERATION_SEQ_NUM,
      COALESCE(stg.REPETITIVE_SCHEDULE_ID, 0) AS REPETITIVE_SCHEDULE_ID
    FROM silver_bec_ods.wip_requirement_operations AS ods, bronze_bec_ods_stg.wip_requirement_operations AS stg
    WHERE
      COALESCE(ods.INVENTORY_ITEM_ID, 0) = COALESCE(stg.INVENTORY_ITEM_ID, 0)
      AND COALESCE(ods.WIP_ENTITY_ID, 0) = COALESCE(stg.WIP_ENTITY_ID, 0)
      AND COALESCE(ods.OPERATION_SEQ_NUM, 0) = COALESCE(stg.OPERATION_SEQ_NUM, 0)
      AND COALESCE(ods.REPETITIVE_SCHEDULE_ID, 0) = COALESCE(stg.REPETITIVE_SCHEDULE_ID, 0)
      AND stg.kca_operation IN ('INSERT', 'UPDATE')
  );
/* Insert records */
INSERT INTO silver_bec_ods.wip_requirement_operations (
  INVENTORY_ITEM_ID,
  ORGANIZATION_ID,
  WIP_ENTITY_ID,
  OPERATION_SEQ_NUM,
  REPETITIVE_SCHEDULE_ID,
  LAST_UPDATE_DATE,
  LAST_UPDATED_BY,
  CREATION_DATE,
  CREATED_BY,
  LAST_UPDATE_LOGIN,
  REQUEST_ID,
  PROGRAM_APPLICATION_ID,
  PROGRAM_ID,
  PROGRAM_UPDATE_DATE,
  COMPONENT_SEQUENCE_ID,
  DEPARTMENT_ID,
  WIP_SUPPLY_TYPE,
  DATE_REQUIRED,
  REQUIRED_QUANTITY,
  QUANTITY_ISSUED,
  QUANTITY_PER_ASSEMBLY,
  COMMENTS,
  SUPPLY_SUBINVENTORY,
  SUPPLY_LOCATOR_ID,
  MRP_NET_FLAG,
  MPS_REQUIRED_QUANTITY,
  MPS_DATE_REQUIRED,
  SEGMENT1,
  SEGMENT2,
  SEGMENT3,
  SEGMENT4,
  SEGMENT5,
  SEGMENT6,
  SEGMENT7,
  SEGMENT8,
  SEGMENT9,
  SEGMENT10,
  SEGMENT11,
  SEGMENT12,
  SEGMENT13,
  SEGMENT14,
  SEGMENT15,
  SEGMENT16,
  SEGMENT17,
  SEGMENT18,
  SEGMENT19,
  SEGMENT20,
  ATTRIBUTE_CATEGORY,
  ATTRIBUTE1,
  ATTRIBUTE2,
  ATTRIBUTE3,
  ATTRIBUTE4,
  ATTRIBUTE5,
  ATTRIBUTE6,
  ATTRIBUTE7,
  ATTRIBUTE8,
  ATTRIBUTE9,
  ATTRIBUTE10,
  ATTRIBUTE11,
  ATTRIBUTE12,
  ATTRIBUTE13,
  ATTRIBUTE14,
  ATTRIBUTE15,
  RELIEVED_MATL_COMPLETION_QTY,
  RELIEVED_MATL_SCRAP_QUANTITY,
  RELIEVED_MATL_FINAL_COMP_QTY,
  QUANTITY_ALLOCATED,
  QUANTITY_BACKORDERED,
  QUANTITY_RELIEVED,
  COSTED_QUANTITY_ISSUED,
  COSTED_QUANTITY_RELIEVED,
  AUTO_REQUEST_MATERIAL,
  RELEASED_QUANTITY,
  SUGGESTED_VENDOR_NAME,
  VENDOR_ID,
  UNIT_PRICE,
  PRIMARY_COMPONENT_ID,
  BASIS_TYPE,
  COMPONENT_YIELD_FACTOR,
  VENDOR_SITE_ID,
  VENDOR_CONTACT_ID,
  KCA_OPERATION,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
(
  SELECT
    INVENTORY_ITEM_ID,
    ORGANIZATION_ID,
    WIP_ENTITY_ID,
    OPERATION_SEQ_NUM,
    REPETITIVE_SCHEDULE_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_LOGIN,
    REQUEST_ID,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    PROGRAM_UPDATE_DATE,
    COMPONENT_SEQUENCE_ID,
    DEPARTMENT_ID,
    WIP_SUPPLY_TYPE,
    DATE_REQUIRED,
    REQUIRED_QUANTITY,
    QUANTITY_ISSUED,
    QUANTITY_PER_ASSEMBLY,
    COMMENTS,
    SUPPLY_SUBINVENTORY,
    SUPPLY_LOCATOR_ID,
    MRP_NET_FLAG,
    MPS_REQUIRED_QUANTITY,
    MPS_DATE_REQUIRED,
    SEGMENT1,
    SEGMENT2,
    SEGMENT3,
    SEGMENT4,
    SEGMENT5,
    SEGMENT6,
    SEGMENT7,
    SEGMENT8,
    SEGMENT9,
    SEGMENT10,
    SEGMENT11,
    SEGMENT12,
    SEGMENT13,
    SEGMENT14,
    SEGMENT15,
    SEGMENT16,
    SEGMENT17,
    SEGMENT18,
    SEGMENT19,
    SEGMENT20,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    RELIEVED_MATL_COMPLETION_QTY,
    RELIEVED_MATL_SCRAP_QUANTITY,
    RELIEVED_MATL_FINAL_COMP_QTY,
    QUANTITY_ALLOCATED,
    QUANTITY_BACKORDERED,
    QUANTITY_RELIEVED,
    COSTED_QUANTITY_ISSUED,
    COSTED_QUANTITY_RELIEVED,
    AUTO_REQUEST_MATERIAL,
    RELEASED_QUANTITY,
    SUGGESTED_VENDOR_NAME,
    VENDOR_ID,
    UNIT_PRICE,
    PRIMARY_COMPONENT_ID,
    BASIS_TYPE,
    COMPONENT_YIELD_FACTOR,
    VENDOR_SITE_ID,
    VENDOR_CONTACT_ID,
    KCA_OPERATION,
    'N' AS IS_DELETED_FLG,
    CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
    KCA_SEQ_DATE
  FROM bronze_bec_ods_stg.wip_requirement_operations
  WHERE
    kca_operation IN ('INSERT', 'UPDATE')
    AND (COALESCE(INVENTORY_ITEM_ID, 0), COALESCE(WIP_ENTITY_ID, 0), COALESCE(OPERATION_SEQ_NUM, 0), COALESCE(REPETITIVE_SCHEDULE_ID, 0), kca_seq_id) IN (
      SELECT
        COALESCE(INVENTORY_ITEM_ID, 0) AS INVENTORY_ITEM_ID,
        COALESCE(WIP_ENTITY_ID, 0) AS WIP_ENTITY_ID,
        COALESCE(OPERATION_SEQ_NUM, 0) AS OPERATION_SEQ_NUM,
        COALESCE(REPETITIVE_SCHEDULE_ID, 0) AS REPETITIVE_SCHEDULE_ID,
        MAX(kca_seq_id)
      FROM bronze_bec_ods_stg.wip_requirement_operations
      WHERE
        kca_operation IN ('INSERT', 'UPDATE')
      GROUP BY
        COALESCE(INVENTORY_ITEM_ID, 0),
        COALESCE(WIP_ENTITY_ID, 0),
        COALESCE(OPERATION_SEQ_NUM, 0),
        COALESCE(REPETITIVE_SCHEDULE_ID, 0)
    )
);
/* Soft delete */
UPDATE silver_bec_ods.wip_requirement_operations SET IS_DELETED_FLG = 'N';
UPDATE silver_bec_ods.wip_requirement_operations SET IS_DELETED_FLG = 'Y'
WHERE
  (COALESCE(INVENTORY_ITEM_ID, 0), COALESCE(WIP_ENTITY_ID, 0), COALESCE(OPERATION_SEQ_NUM, 0), COALESCE(REPETITIVE_SCHEDULE_ID, 0)) IN (
    SELECT
      COALESCE(INVENTORY_ITEM_ID, 0),
      COALESCE(WIP_ENTITY_ID, 0),
      COALESCE(OPERATION_SEQ_NUM, 0),
      COALESCE(REPETITIVE_SCHEDULE_ID, 0)
    FROM bec_raw_dl_ext.wip_requirement_operations
    WHERE
      (COALESCE(INVENTORY_ITEM_ID, 0), COALESCE(WIP_ENTITY_ID, 0), COALESCE(OPERATION_SEQ_NUM, 0), COALESCE(REPETITIVE_SCHEDULE_ID, 0), KCA_SEQ_ID) IN (
        SELECT
          COALESCE(INVENTORY_ITEM_ID, 0),
          COALESCE(WIP_ENTITY_ID, 0),
          COALESCE(OPERATION_SEQ_NUM, 0),
          COALESCE(REPETITIVE_SCHEDULE_ID, 0),
          MAX(KCA_SEQ_ID) AS KCA_SEQ_ID
        FROM bec_raw_dl_ext.wip_requirement_operations
        GROUP BY
          COALESCE(INVENTORY_ITEM_ID, 0),
          COALESCE(WIP_ENTITY_ID, 0),
          COALESCE(OPERATION_SEQ_NUM, 0),
          COALESCE(REPETITIVE_SCHEDULE_ID, 0)
      )
      AND kca_operation = 'DELETE'
  );
UPDATE bec_etl_ctrl.batch_ods_info SET last_refresh_date = CURRENT_TIMESTAMP()
WHERE
  ods_table_name = 'wip_requirement_operations';