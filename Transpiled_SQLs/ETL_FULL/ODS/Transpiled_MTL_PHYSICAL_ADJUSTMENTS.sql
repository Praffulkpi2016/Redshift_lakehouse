DROP TABLE IF EXISTS silver_bec_ods.MTL_PHYSICAL_ADJUSTMENTS;
CREATE TABLE IF NOT EXISTS silver_bec_ods.MTL_PHYSICAL_ADJUSTMENTS (
  adjustment_id DECIMAL(15, 0),
  organization_id DECIMAL(15, 0),
  physical_inventory_id DECIMAL(15, 0),
  inventory_item_id DECIMAL(15, 0),
  subinventory_name STRING,
  system_quantity DECIMAL(28, 10),
  last_update_date TIMESTAMP,
  last_updated_by DECIMAL(15, 0),
  creation_date TIMESTAMP,
  created_by DECIMAL(15, 0),
  last_update_login DECIMAL(15, 0),
  count_quantity DECIMAL(28, 10),
  adjustment_quantity DECIMAL(28, 10),
  revision STRING,
  locator_id DECIMAL(15, 0),
  lot_number STRING,
  lot_expiration_date TIMESTAMP,
  serial_number STRING,
  actual_cost DECIMAL(28, 10),
  approval_status DECIMAL(22, 0),
  approved_by_employee_id DECIMAL(9, 0),
  automatic_approval_code DECIMAL(15, 0),
  gl_adjust_account DECIMAL(15, 0),
  request_id DECIMAL(15, 0),
  program_application_id DECIMAL(15, 0),
  program_id DECIMAL(15, 0),
  program_update_date TIMESTAMP,
  lot_serial_controls STRING,
  temp_approver DECIMAL(1, 0),
  parent_lpn_id DECIMAL(15, 0),
  outermost_lpn_id DECIMAL(15, 0),
  cost_group_id DECIMAL(15, 0),
  secondary_system_qty DECIMAL(28, 10),
  secondary_count_qty DECIMAL(28, 10),
  secondary_adjustment_qty DECIMAL(28, 10),
  KCA_OPERATION STRING,
  IS_DELETED_FLG STRING,
  kca_seq_id DECIMAL(36, 0),
  kca_seq_date TIMESTAMP
);
INSERT INTO silver_bec_ods.MTL_PHYSICAL_ADJUSTMENTS (
  adjustment_id,
  organization_id,
  physical_inventory_id,
  inventory_item_id,
  subinventory_name,
  system_quantity,
  last_update_date,
  last_updated_by,
  creation_date,
  created_by,
  last_update_login,
  count_quantity,
  adjustment_quantity,
  revision,
  locator_id,
  lot_number,
  lot_expiration_date,
  serial_number,
  actual_cost,
  approval_status,
  approved_by_employee_id,
  automatic_approval_code,
  gl_adjust_account,
  request_id,
  program_application_id,
  program_id,
  program_update_date,
  lot_serial_controls,
  temp_approver,
  parent_lpn_id,
  outermost_lpn_id,
  cost_group_id,
  secondary_system_qty,
  secondary_count_qty,
  secondary_adjustment_qty,
  kca_operation,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
SELECT
  adjustment_id,
  organization_id,
  physical_inventory_id,
  inventory_item_id,
  subinventory_name,
  system_quantity,
  last_update_date,
  last_updated_by,
  creation_date,
  created_by,
  last_update_login,
  count_quantity,
  adjustment_quantity,
  revision,
  locator_id,
  lot_number,
  lot_expiration_date,
  serial_number,
  actual_cost,
  approval_status,
  approved_by_employee_id,
  automatic_approval_code,
  gl_adjust_account,
  request_id,
  program_application_id,
  program_id,
  program_update_date,
  lot_serial_controls,
  temp_approver,
  parent_lpn_id,
  outermost_lpn_id,
  cost_group_id,
  secondary_system_qty,
  secondary_count_qty,
  secondary_adjustment_qty,
  KCA_OPERATION,
  'N' AS IS_DELETED_FLG,
  CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
  kca_seq_date
FROM bronze_bec_ods_stg.MTL_PHYSICAL_ADJUSTMENTS;
UPDATE bec_etl_ctrl.batch_ods_info SET load_type = 'I', last_refresh_date = CURRENT_TIMESTAMP()
WHERE
  ods_table_name = 'mtl_physical_adjustments';