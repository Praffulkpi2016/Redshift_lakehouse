DROP TABLE IF EXISTS silver_bec_ods.WF_ACTIVITIES;
CREATE TABLE IF NOT EXISTS silver_bec_ods.WF_ACTIVITIES (
  item_type STRING,
  `name` STRING,
  version DECIMAL(15, 0),
  `type` STRING,
  rerun STRING,
  expand_role STRING,
  protect_level DECIMAL(15, 0),
  custom_level DECIMAL(15, 0),
  begin_date TIMESTAMP,
  end_date TIMESTAMP,
  `function` STRING,
  result_type STRING,
  cost DECIMAL(28, 10),
  read_role STRING,
  write_role STRING,
  execute_role STRING,
  icon_name STRING,
  message STRING,
  error_process STRING,
  error_item_type STRING,
  runnable_flag STRING,
  function_type STRING,
  event_name STRING,
  direction STRING,
  security_group_id STRING,
  zd_edition_name STRING,
  zd_sync STRING,
  KCA_OPERATION STRING,
  IS_DELETED_FLG STRING,
  kca_seq_id DECIMAL(36, 0),
  kca_seq_date TIMESTAMP
);
INSERT INTO silver_bec_ods.WF_ACTIVITIES (
  item_type,
  `name`,
  version,
  `type`,
  rerun,
  expand_role,
  protect_level,
  custom_level,
  begin_date,
  end_date,
  `function`,
  result_type,
  cost,
  read_role,
  write_role,
  execute_role,
  icon_name,
  message,
  error_process,
  error_item_type,
  runnable_flag,
  function_type,
  event_name,
  direction,
  security_group_id,
  zd_edition_name,
  zd_sync,
  kca_operation,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
SELECT
  item_type,
  `name`,
  version,
  `type`,
  rerun,
  expand_role,
  protect_level,
  custom_level,
  begin_date,
  end_date,
  `function`,
  result_type,
  cost,
  read_role,
  write_role,
  execute_role,
  icon_name,
  message,
  error_process,
  error_item_type,
  runnable_flag,
  function_type,
  event_name,
  direction,
  security_group_id,
  zd_edition_name,
  zd_sync,
  KCA_OPERATION,
  'N' AS IS_DELETED_FLG,
  CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
  kca_seq_date
FROM bronze_bec_ods_stg.WF_ACTIVITIES;
UPDATE bec_etl_ctrl.batch_ods_info SET load_type = 'I', last_refresh_date = CURRENT_TIMESTAMP()
WHERE
  ods_table_name = 'wf_activities';