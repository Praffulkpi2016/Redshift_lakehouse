DROP TABLE IF EXISTS silver_bec_ods.FND_RESPONSIBILITY;
CREATE TABLE IF NOT EXISTS silver_bec_ods.FND_RESPONSIBILITY (
  APPLICATION_ID DECIMAL(15, 0),
  RESPONSIBILITY_ID DECIMAL(15, 0),
  LAST_UPDATE_DATE TIMESTAMP,
  LAST_UPDATED_BY DECIMAL(15, 0),
  CREATION_DATE TIMESTAMP,
  CREATED_BY DECIMAL(15, 0),
  LAST_UPDATE_LOGIN DECIMAL(15, 0),
  DATA_GROUP_APPLICATION_ID DECIMAL(15, 0),
  DATA_GROUP_ID DECIMAL(15, 0),
  MENU_ID DECIMAL(15, 0),
  TERM_SECURITY_ENABLED_FLAG STRING,
  START_DATE TIMESTAMP,
  END_DATE TIMESTAMP,
  GROUP_APPLICATION_ID DECIMAL(15, 0),
  REQUEST_GROUP_ID DECIMAL(15, 0),
  VERSION STRING,
  WEB_HOST_NAME STRING,
  WEB_AGENT_NAME STRING,
  RESPONSIBILITY_KEY STRING,
  ZD_EDITION_NAME STRING,
  ZD_SYNC STRING,
  KCA_OPERATION STRING,
  IS_DELETED_FLG STRING,
  kca_seq_id DECIMAL(36, 0),
  kca_seq_date TIMESTAMP
);
INSERT INTO silver_bec_ods.FND_RESPONSIBILITY (
  APPLICATION_ID,
  RESPONSIBILITY_ID,
  LAST_UPDATE_DATE,
  LAST_UPDATED_BY,
  CREATION_DATE,
  CREATED_BY,
  LAST_UPDATE_LOGIN,
  DATA_GROUP_APPLICATION_ID,
  DATA_GROUP_ID,
  MENU_ID,
  TERM_SECURITY_ENABLED_FLAG,
  START_DATE,
  END_DATE,
  GROUP_APPLICATION_ID,
  REQUEST_GROUP_ID,
  VERSION,
  WEB_HOST_NAME,
  WEB_AGENT_NAME,
  RESPONSIBILITY_KEY,
  ZD_EDITION_NAME,
  ZD_SYNC,
  KCA_OPERATION,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
SELECT
  APPLICATION_ID,
  RESPONSIBILITY_ID,
  LAST_UPDATE_DATE,
  LAST_UPDATED_BY,
  CREATION_DATE,
  CREATED_BY,
  LAST_UPDATE_LOGIN,
  DATA_GROUP_APPLICATION_ID,
  DATA_GROUP_ID,
  MENU_ID,
  TERM_SECURITY_ENABLED_FLAG,
  START_DATE,
  END_DATE,
  GROUP_APPLICATION_ID,
  REQUEST_GROUP_ID,
  VERSION,
  WEB_HOST_NAME,
  WEB_AGENT_NAME,
  RESPONSIBILITY_KEY,
  ZD_EDITION_NAME,
  ZD_SYNC,
  KCA_OPERATION,
  'N' AS IS_DELETED_FLG,
  CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
  kca_seq_date
FROM bronze_bec_ods_stg.FND_RESPONSIBILITY;
UPDATE bec_etl_ctrl.batch_ods_info SET load_type = 'I', last_refresh_date = CURRENT_TIMESTAMP()
WHERE
  ods_table_name = 'fnd_responsibility';