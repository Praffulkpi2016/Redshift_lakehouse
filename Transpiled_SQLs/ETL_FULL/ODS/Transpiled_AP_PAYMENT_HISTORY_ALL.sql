DROP TABLE IF EXISTS silver_bec_ods.ap_payment_history_all;
CREATE TABLE IF NOT EXISTS silver_bec_ods.ap_payment_history_all (
  payment_history_id DECIMAL(15, 0),
  check_id DECIMAL(15, 0),
  accounting_date TIMESTAMP,
  transaction_type STRING,
  posted_flag STRING,
  matched_flag STRING,
  accounting_event_id DECIMAL(15, 0),
  org_id DECIMAL(15, 0),
  creation_date TIMESTAMP,
  created_by DECIMAL(15, 0),
  last_update_date TIMESTAMP,
  last_updated_by DECIMAL(15, 0),
  last_update_login DECIMAL(15, 0),
  program_update_date TIMESTAMP,
  program_application_id DECIMAL(15, 0),
  program_id DECIMAL(15, 0),
  request_id DECIMAL(15, 0),
  rev_pmt_hist_id DECIMAL(15, 0),
  trx_bank_amount DECIMAL(28, 10),
  errors_bank_amount DECIMAL(28, 10),
  charges_bank_amount DECIMAL(28, 10),
  trx_pmt_amount DECIMAL(28, 10),
  errors_pmt_amount DECIMAL(28, 10),
  charges_pmt_amount DECIMAL(28, 10),
  trx_base_amount DECIMAL(28, 10),
  errors_base_amount DECIMAL(28, 10),
  charges_base_amount DECIMAL(28, 10),
  bank_currency_code STRING,
  bank_to_base_xrate_type STRING,
  bank_to_base_xrate_date TIMESTAMP,
  bank_to_base_xrate DECIMAL(28, 10),
  pmt_currency_code STRING,
  pmt_to_base_xrate_type STRING,
  pmt_to_base_xrate_date TIMESTAMP,
  pmt_to_base_xrate DECIMAL(28, 10),
  mrc_pmt_to_base_xrate_type STRING,
  mrc_pmt_to_base_xrate_date STRING,
  mrc_pmt_to_base_xrate STRING,
  mrc_bank_to_base_xrate_type STRING,
  mrc_bank_to_base_xrate_date STRING,
  mrc_bank_to_base_xrate STRING,
  mrc_trx_base_amount STRING,
  mrc_errors_base_amount STRING,
  mrc_charges_base_amount STRING,
  related_event_id DECIMAL(15, 0),
  historical_flag STRING,
  invoice_adjustment_event_id DECIMAL(15, 0),
  gain_loss_indicator STRING,
  KCA_OPERATION STRING,
  IS_DELETED_FLG STRING,
  kca_seq_id DECIMAL(36, 0),
  kca_seq_date TIMESTAMP
);
INSERT INTO silver_bec_ods.ap_payment_history_all (
  payment_history_id,
  check_id,
  accounting_date,
  transaction_type,
  posted_flag,
  matched_flag,
  accounting_event_id,
  org_id,
  creation_date,
  created_by,
  last_update_date,
  last_updated_by,
  last_update_login,
  program_update_date,
  program_application_id,
  program_id,
  request_id,
  rev_pmt_hist_id,
  trx_bank_amount,
  errors_bank_amount,
  charges_bank_amount,
  trx_pmt_amount,
  errors_pmt_amount,
  charges_pmt_amount,
  trx_base_amount,
  errors_base_amount,
  charges_base_amount,
  bank_currency_code,
  bank_to_base_xrate_type,
  bank_to_base_xrate_date,
  bank_to_base_xrate,
  pmt_currency_code,
  pmt_to_base_xrate_type,
  pmt_to_base_xrate_date,
  pmt_to_base_xrate,
  mrc_pmt_to_base_xrate_type,
  mrc_pmt_to_base_xrate_date,
  mrc_pmt_to_base_xrate,
  mrc_bank_to_base_xrate_type,
  mrc_bank_to_base_xrate_date,
  mrc_bank_to_base_xrate,
  mrc_trx_base_amount,
  mrc_errors_base_amount,
  mrc_charges_base_amount,
  related_event_id,
  historical_flag,
  invoice_adjustment_event_id,
  gain_loss_indicator,
  KCA_OPERATION,
  IS_DELETED_FLG,
  kca_seq_id,
  kca_seq_date
)
(
  SELECT
    payment_history_id,
    check_id,
    accounting_date,
    transaction_type,
    posted_flag,
    matched_flag,
    accounting_event_id,
    org_id,
    creation_date,
    created_by,
    last_update_date,
    last_updated_by,
    last_update_login,
    program_update_date,
    program_application_id,
    program_id,
    request_id,
    rev_pmt_hist_id,
    trx_bank_amount,
    errors_bank_amount,
    charges_bank_amount,
    trx_pmt_amount,
    errors_pmt_amount,
    charges_pmt_amount,
    trx_base_amount,
    errors_base_amount,
    charges_base_amount,
    bank_currency_code,
    bank_to_base_xrate_type,
    bank_to_base_xrate_date,
    bank_to_base_xrate,
    pmt_currency_code,
    pmt_to_base_xrate_type,
    pmt_to_base_xrate_date,
    pmt_to_base_xrate,
    mrc_pmt_to_base_xrate_type,
    mrc_pmt_to_base_xrate_date,
    mrc_pmt_to_base_xrate,
    mrc_bank_to_base_xrate_type,
    mrc_bank_to_base_xrate_date,
    mrc_bank_to_base_xrate,
    mrc_trx_base_amount,
    mrc_errors_base_amount,
    mrc_charges_base_amount,
    related_event_id,
    historical_flag,
    invoice_adjustment_event_id,
    gain_loss_indicator,
    KCA_OPERATION,
    'N' AS IS_DELETED_FLG,
    CAST(NULLIF(KCA_SEQ_ID, '') AS DECIMAL(36, 0)) AS KCA_SEQ_ID,
    kca_seq_date
  FROM bronze_bec_ods_stg.ap_payment_history_all
);
UPDATE bec_etl_ctrl.batch_ods_info SET load_type = 'I', last_refresh_date = CURRENT_TIMESTAMP()
WHERE
  ods_table_name = 'ap_payment_history_all';